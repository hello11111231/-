<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transnova.foundation.organization.mapper.HierarchyMapper">
  <resultMap id="BaseResultMap" type="com.transnova.foundation.organization.model.Hierarchy">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="orgCode" jdbcType="VARCHAR" property="orgCode" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="parentCode" jdbcType="VARCHAR" property="parentCode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="refId" jdbcType="BIGINT" property="refId" />
    <result column="showIndex" jdbcType="INTEGER" property="showIndex" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orgCode, code, parentCode, name, type, refId, showIndex
  </sql>
  <select id="selectByExample" parameterType="com.transnova.foundation.organization.mapper.HierarchyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_hierarchy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_hierarchy
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_hierarchy
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.transnova.foundation.organization.mapper.HierarchyExample">
    delete from sys_hierarchy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.transnova.foundation.organization.model.Hierarchy">
    insert into sys_hierarchy (id, orgCode, code, parentCode,
      name, type, refId, showIndex
      )
    values (#{id,jdbcType=BIGINT}, #{orgCode,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{parentCode,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{refId,jdbcType=BIGINT}, #{showIndex,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.transnova.foundation.organization.model.Hierarchy">
    insert into sys_hierarchy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orgCode != null">
        orgCode,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="parentCode != null">
        parentCode,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="refId != null">
        refId,
      </if>
      <if test="showIndex != null">
        showIndex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null">
        #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="refId != null">
        #{refId,jdbcType=BIGINT},
      </if>
      <if test="showIndex != null">
        #{showIndex,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.transnova.foundation.organization.mapper.HierarchyExample" resultType="java.lang.Long">
    select count(*) from sys_hierarchy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_hierarchy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orgCode != null">
        orgCode = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.parentCode != null">
        parentCode = #{record.parentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.refId != null">
        refId = #{record.refId,jdbcType=BIGINT},
      </if>
      <if test="record.showIndex != null">
        showIndex = #{record.showIndex,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_hierarchy
    set id = #{record.id,jdbcType=BIGINT},
      orgCode = #{record.orgCode,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      parentCode = #{record.parentCode,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      refId = #{record.refId,jdbcType=BIGINT},
      showIndex = #{record.showIndex,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.transnova.foundation.organization.model.Hierarchy">
    update sys_hierarchy
    <set>
      <if test="orgCode != null">
        orgCode = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null">
        parentCode = #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="refId != null">
        refId = #{refId,jdbcType=BIGINT},
      </if>
      <if test="showIndex != null">
        showIndex = #{showIndex,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.transnova.foundation.organization.model.Hierarchy">
    update sys_hierarchy
    set orgCode = #{orgCode,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      parentCode = #{parentCode,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      refId = #{refId,jdbcType=BIGINT},
      showIndex = #{showIndex,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!--查询关联顶级组织下面的企业-->
  <select id="selectTopOrgCompany" parameterType="map" resultType="com.transnova.foundation.company.model.Company">
    select id, orgCode, name, typeId, mainBusiness, logo, operateTypeId, registerAddress, foundDate,
    registerCapital, manageRange, email, filingRate, identity, fileIntegrity, startServiceDate,
    serviceExpirationDate, createTime, createUserId, updateUserId, updateTime, deleted,
    extcol from company
    where id in
    (select refId from sys_hierarchy where type = 'company' and orgCode =#{orgCode} and parentCode is null)
    limit #{pageIndex},#{pageSize}
  </select>
  <select id="findByCodeLength" parameterType="map" resultType="com.transnova.foundation.organization.model.Hierarchy">
    select
    <include refid="Base_Column_List" />
    from sys_hierarchy where
    orgCode= #{orgCode}
    <if test="hierarchyCode != null and hierarchyCode != ''">
      and code LIKE '${hierarchyCode}%'
    </if>
    and LENGTH(`code`) between  #{minLength} and #{maxLength}
    ORDER BY LENGTH(`code`), parentCode, showIndex
  </select>

  <!--  统计组织树 子节点的数量 in 这个条件要斟酌一下  -->
  <select id="findChildrenCount" resultType="com.transnova.foundation.common.model.NormalKeyValue">
    select
    parentCode as name,
    count(*) as  value
    from
    sys_hierarchy
    where
    orgCode= #{orgCode}
    <if test="hierarchyCode != null and hierarchyCode != ''">
      and code LIKE '${hierarchyCode}%'
    </if>
    and IFNULL(refId,'') not in(select id from company where deleted >0)
    and LENGTH(`code`) between  #{minLength} and #{maxLength}
    group by parentCode
    order by LENGTH(parentCode), parentCode
  </select>

  <select id="isHasChildren" parameterType="map" resultType="String">
    select  code from sys_hierarchy where orgCode=#{orgCode} and parentCode=#{parentCode} limit 1
  </select>
  <select id="selectActiveCompany" parameterType="map" resultType="String">
     select code from sys_hierarchy s
     left JOIN
     company c
     on
     c.id=s.refId and c.deleted=FALSE
     where s.orgCode=#{orgCode} and type='company' and code like '${hierarchyCode}%'
     limit 1
  </select>
</mapper>