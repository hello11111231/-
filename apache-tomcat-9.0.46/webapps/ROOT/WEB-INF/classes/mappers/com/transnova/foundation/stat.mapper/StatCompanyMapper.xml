<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transnova.foundation.stat.mapper.StatCompanyMapper">
  <resultMap id="BaseResultMap" type="com.transnova.foundation.stat.model.StatCompany">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="companyId" jdbcType="BIGINT" property="companyId" />
    <result column="vehicleCount" jdbcType="INTEGER" property="vehicleCount" />
    <result column="driverCount" jdbcType="INTEGER" property="driverCount" />
    <result column="gpsDeviceCount" jdbcType="INTEGER" property="gpsDeviceCount" />
    <result column="videoDeviceCount" jdbcType="INTEGER" property="videoDeviceCount" />
    <result column="dmsDeviceCount" jdbcType="INTEGER" property="dmsDeviceCount" />
    <result column="adasDeviceCount" jdbcType="INTEGER" property="adasDeviceCount" />
    <result column="eventCount" jdbcType="INTEGER" property="eventCount" />
    <result column="driveMileages" jdbcType="BIGINT" property="driveMileages" />
    <result column="completeMileages" jdbcType="BIGINT" property="completeMileages" />
    <result column="highRiskEventCount" jdbcType="INTEGER" property="highRiskEventCount" />
    <result column="mediumRiskEventCount" jdbcType="INTEGER" property="mediumRiskEventCount" />
    <result column="lowRiskEventCount" jdbcType="INTEGER" property="lowRiskEventCount" />
    <result column="overspeedCount" jdbcType="INTEGER" property="overspeedCount" />
    <result column="onlineDriverCount" jdbcType="INTEGER" property="onlineDriverCount" />
    <result column="onlineVehicleCount" jdbcType="INTEGER" property="onlineVehicleCount" />
    <result column="outProvinceVehicleCount" jdbcType="INTEGER" property="outProvinceVehicleCount" />
    <result column="vhitchCount" jdbcType="INTEGER" property="vhitchCount" />
    <result column="dhitchCount" jdbcType="INTEGER" property="dhitchCount" />
    <result column="operateType" jdbcType="VARCHAR" property="operateType" />
    <result column="analyzeDate" jdbcType="INTEGER" property="analyzeDate" />
  </resultMap>

  <resultMap id="StatCompanyRatio" type="com.transnova.foundation.stat.model.StatCompanyRatio">
      <result column="companyId" jdbcType="BIGINT" property="companyId" />
      <result column="companyName" jdbcType="VARCHAR" property="companyName" />
      <result column="ratio" jdbcType="DECIMAL" property="ratio" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>

                <!-- 新的数据权限控制 -->
                <when test="criterion.governmentFiltering">
                  and exists (select id from company_manage_relevance _x_ where stat_company.companyId = _x_.companyId and _x_.govCode like #{criterion.governmentCode})
                </when>

                <when test="criterion.proxyFiltering">
                  and companyId in (select companyId from vehicle_manage_relevance _x_ where _x_.orgCode = #{criterion.userOrganizationCode})
                </when>

                <when test="criterion.companyFiltering">
                  and companyId in (select companyId from vehicle_manage_relevance _x_ where _x_.orgCode = #{criterion.userOrganizationCode})
                </when>

              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, companyId, vehicleCount, driverCount, gpsDeviceCount, videoDeviceCount, dmsDeviceCount, 
    adasDeviceCount, eventCount, driveMileages, completeMileages, highRiskEventCount, 
    mediumRiskEventCount, lowRiskEventCount, overspeedCount, onlineDriverCount, onlineVehicleCount, 
    outProvinceVehicleCount, vhitchCount, dhitchCount, operateType, analyzeDate
  </sql>
  <select id="selectByExample" parameterType="com.transnova.foundation.stat.mapper.StatCompanyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stat_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>


    <select id="countByArea" parameterType="map" resultMap="BaseResultMap">
        select sum(dmsDeviceCount) as dmsDeviceCount, sum(vehicleCount) as vehicleCount, sum(eventCount) as eventCount from stat_company
        where 1 = 1
        <if test="operateTypeCode != null and operateTypeCode != ''">
            and find_in_set(operateType, #{operateTypeCode})
        </if>
        <if test="startDate != null">
            and analyzeDate &gt;= #{startDate}
        </if>
        <if test="endDate != null">
            and analyzeDate &lt;= #{endDate}
        </if>
        <if test="companyName != null and companyName != ''">
        and companyId in ( select id from company where 1 = 1
                            <if test="companyName != null and companyName != ''">
                                and name like '%${companyName}%'
                            </if>
                            )
        </if>

        <!-- 新的数据权限控制 -->
        <if test="governmentFiltering">
          and exists (select id from company_manage_relevance _x_ where stat_company.companyId = _x_.companyId and _x_.govCode like #{filteringGovernmentCode})
        </if>

        <if test="proxyFiltering">
          and companyId in (select companyId from vehicle_manage_relevance _x_ where _x_.orgCode = #{filteringUserOrganizationCode})
        </if>

        <if test="companyFiltering">
          and companyId in (select companyId from vehicle_manage_relevance _x_ where _x_.orgCode = #{filteringUserOrganizationCode})
        </if>

    </select>

    <select id="countVehicleAndEvent" parameterType="map" resultMap="BaseResultMap">
        select sum(vehicleCount) as vehicleCount, sum(eventCount) as eventCount from stat_company
        where 1 = 1

        <if test="day != null">
            and analyzeDate &gt;= #{day}
            and analyzeDate &lt;= #{day}
        </if>
      <!-- 新的数据权限控制 -->
      <if test="governmentFiltering">
        and exists (select id from company_manage_relevance _x_ where stat_company.companyId = _x_.companyId and _x_.govCode like #{filteringGovernmentCode})
      </if>

      <if test="proxyFiltering">
        and companyId in (select companyId from vehicle_manage_relevance _x_ where _x_.orgCode = #{filteringUserOrganizationCode})
      </if>

      <if test="companyFiltering">
        and companyId in (select companyId from vehicle_manage_relevance _x_ where _x_.orgCode = #{filteringUserOrganizationCode})
      </if>

    </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stat_company
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from stat_company
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.transnova.foundation.stat.mapper.StatCompanyExample">
    delete from stat_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.transnova.foundation.stat.model.StatCompany">
    insert into stat_company (id, companyId, vehicleCount, 
      driverCount, gpsDeviceCount, videoDeviceCount, 
      dmsDeviceCount, adasDeviceCount, eventCount, 
      driveMileages, completeMileages, highRiskEventCount, 
      mediumRiskEventCount, lowRiskEventCount, 
      overspeedCount, onlineDriverCount, onlineVehicleCount, 
      outProvinceVehicleCount, vhitchCount, dhitchCount, operateType,
      analyzeDate)
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{vehicleCount,jdbcType=INTEGER}, 
      #{driverCount,jdbcType=INTEGER}, #{gpsDeviceCount,jdbcType=INTEGER}, #{videoDeviceCount,jdbcType=INTEGER}, 
      #{dmsDeviceCount,jdbcType=INTEGER}, #{adasDeviceCount,jdbcType=INTEGER}, #{eventCount,jdbcType=INTEGER}, 
      #{driveMileages,jdbcType=BIGINT}, #{completeMileages,jdbcType=BIGINT}, #{highRiskEventCount,jdbcType=INTEGER}, 
      #{mediumRiskEventCount,jdbcType=INTEGER}, #{lowRiskEventCount,jdbcType=INTEGER}, 
      #{overspeedCount,jdbcType=INTEGER}, #{onlineDriverCount,jdbcType=INTEGER}, #{onlineVehicleCount,jdbcType=INTEGER}, 
      #{outProvinceVehicleCount,jdbcType=INTEGER}, #{vhitchCount,jdbcType=INTEGER}, #{dhitchCount,jdbcType=INTEGER}, 
      #{operateType,jdbcType=VARCHAR}, #{analyzeDate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.transnova.foundation.stat.model.StatCompany">
    insert into stat_company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null">
        companyId,
      </if>
      <if test="vehicleCount != null">
        vehicleCount,
      </if>
      <if test="driverCount != null">
        driverCount,
      </if>
      <if test="gpsDeviceCount != null">
        gpsDeviceCount,
      </if>
      <if test="videoDeviceCount != null">
        videoDeviceCount,
      </if>
      <if test="dmsDeviceCount != null">
        dmsDeviceCount,
      </if>
      <if test="adasDeviceCount != null">
        adasDeviceCount,
      </if>
      <if test="eventCount != null">
        eventCount,
      </if>
      <if test="driveMileages != null">
        driveMileages,
      </if>
      <if test="completeMileages != null">
        completeMileages,
      </if>
      <if test="highRiskEventCount != null">
        highRiskEventCount,
      </if>
      <if test="mediumRiskEventCount != null">
        mediumRiskEventCount,
      </if>
      <if test="lowRiskEventCount != null">
        lowRiskEventCount,
      </if>
      <if test="overspeedCount != null">
        overspeedCount,
      </if>
      <if test="onlineDriverCount != null">
        onlineDriverCount,
      </if>
      <if test="onlineVehicleCount != null">
        onlineVehicleCount,
      </if>
      <if test="outProvinceVehicleCount != null">
        outProvinceVehicleCount,
      </if>
      <if test="vhitchCount != null">
        vhitchCount,
      </if>
      <if test="dhitchCount != null">
        dhitchCount,
      </if>
      <if test="operateType != null">
        operateType,
      </if>
      <if test="analyzeDate != null">
        analyzeDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="vehicleCount != null">
        #{vehicleCount,jdbcType=INTEGER},
      </if>
      <if test="driverCount != null">
        #{driverCount,jdbcType=INTEGER},
      </if>
      <if test="gpsDeviceCount != null">
        #{gpsDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="videoDeviceCount != null">
        #{videoDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="dmsDeviceCount != null">
        #{dmsDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="adasDeviceCount != null">
        #{adasDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="eventCount != null">
        #{eventCount,jdbcType=INTEGER},
      </if>
      <if test="driveMileages != null">
        #{driveMileages,jdbcType=BIGINT},
      </if>
      <if test="completeMileages != null">
        #{completeMileages,jdbcType=BIGINT},
      </if>
      <if test="highRiskEventCount != null">
        #{highRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="mediumRiskEventCount != null">
        #{mediumRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="lowRiskEventCount != null">
        #{lowRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="overspeedCount != null">
        #{overspeedCount,jdbcType=INTEGER},
      </if>
      <if test="onlineDriverCount != null">
        #{onlineDriverCount,jdbcType=INTEGER},
      </if>
      <if test="onlineVehicleCount != null">
        #{onlineVehicleCount,jdbcType=INTEGER},
      </if>
      <if test="outProvinceVehicleCount != null">
        #{outProvinceVehicleCount,jdbcType=INTEGER},
      </if>
      <if test="vhitchCount != null">
        #{vhitchCount,jdbcType=INTEGER},
      </if>
      <if test="dhitchCount != null">
        #{dhitchCount,jdbcType=INTEGER},
      </if>
      <if test="operateType != null">
        #{operateType,jdbcType=VARCHAR},
      </if>
      <if test="analyzeDate != null">
        #{analyzeDate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.transnova.foundation.stat.mapper.StatCompanyExample" resultType="java.lang.Long">
    select count(*) from stat_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stat_company
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        companyId = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.vehicleCount != null and record.vehicleCount > 0">
        vehicleCount = #{record.vehicleCount,jdbcType=INTEGER},
      </if>
      <if test="record.driverCount != null and record.driverCount > 0">
        driverCount = #{record.driverCount,jdbcType=INTEGER},
      </if>
      <if test="record.gpsDeviceCount != null and record.gpsDeviceCount > 0">
        gpsDeviceCount = #{record.gpsDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="record.videoDeviceCount != null and record.videoDeviceCount > 0">
        videoDeviceCount = #{record.videoDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="record.dmsDeviceCount != null and record.dmsDeviceCount > 0">
        dmsDeviceCount = #{record.dmsDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="record.adasDeviceCount != null and record.adasDeviceCount > 0">
        adasDeviceCount = #{record.adasDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="record.eventCount != null and record.eventCount > 0">
        eventCount = #{record.eventCount,jdbcType=INTEGER},
      </if>
      <if test="record.driveMileages != null and record.driveMileages > 0">
        driveMileages = #{record.driveMileages,jdbcType=BIGINT},
      </if>
      <if test="record.completeMileages != null and record.completeMileages > 0">
        completeMileages = #{record.completeMileages,jdbcType=BIGINT},
      </if>
      <if test="record.highRiskEventCount != null and record.highRiskEventCount > 0">
        highRiskEventCount = #{record.highRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="record.mediumRiskEventCount != null and record.mediumRiskEventCount > 0">
        mediumRiskEventCount = #{record.mediumRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="record.lowRiskEventCount != null and record.lowRiskEventCount > 0">
        lowRiskEventCount = #{record.lowRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="record.overspeedCount != null and record.overspeedCount > 0">
        overspeedCount = #{record.overspeedCount,jdbcType=INTEGER},
      </if>
      <if test="record.onlineDriverCount != null and record.onlineDriverCount > 0">
        onlineDriverCount = #{record.onlineDriverCount,jdbcType=INTEGER},
      </if>
      <if test="record.onlineVehicleCount != null and record.onlineVehicleCount > 0">
        onlineVehicleCount = #{record.onlineVehicleCount,jdbcType=INTEGER},
      </if>
      <if test="record.outProvinceVehicleCount != null and record.outProvinceVehicleCount > 0">
        outProvinceVehicleCount = #{record.outProvinceVehicleCount,jdbcType=INTEGER},
      </if>
      <if test="record.vhitchCount != null and record.vhitchCount > 0">
        vhitchCount = #{record.vhitchCount,jdbcType=INTEGER},
      </if>
      <if test="record.dhitchCount != null and record.dhitchCount > 0">
        dhitchCount = #{record.dhitchCount,jdbcType=INTEGER},
      </if>
      <if test="record.operateType != null">
        operateType = #{record.operateType,jdbcType=VARCHAR},
      </if>
      <if test="record.analyzeDate != null">
        analyzeDate = #{record.analyzeDate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stat_company
    set id = #{record.id,jdbcType=BIGINT},
      companyId = #{record.companyId,jdbcType=BIGINT},
      vehicleCount = #{record.vehicleCount,jdbcType=INTEGER},
      driverCount = #{record.driverCount,jdbcType=INTEGER},
      gpsDeviceCount = #{record.gpsDeviceCount,jdbcType=INTEGER},
      videoDeviceCount = #{record.videoDeviceCount,jdbcType=INTEGER},
      dmsDeviceCount = #{record.dmsDeviceCount,jdbcType=INTEGER},
      adasDeviceCount = #{record.adasDeviceCount,jdbcType=INTEGER},
      eventCount = #{record.eventCount,jdbcType=INTEGER},
      driveMileages = #{record.driveMileages,jdbcType=BIGINT},
      completeMileages = #{record.completeMileages,jdbcType=BIGINT},
      highRiskEventCount = #{record.highRiskEventCount,jdbcType=INTEGER},
      mediumRiskEventCount = #{record.mediumRiskEventCount,jdbcType=INTEGER},
      lowRiskEventCount = #{record.lowRiskEventCount,jdbcType=INTEGER},
      overspeedCount = #{record.overspeedCount,jdbcType=INTEGER},
      onlineDriverCount = #{record.onlineDriverCount,jdbcType=INTEGER},
      onlineVehicleCount = #{record.onlineVehicleCount,jdbcType=INTEGER},
      outProvinceVehicleCount = #{record.outProvinceVehicleCount,jdbcType=INTEGER},
      vhitchCount = #{record.vhitchCount,jdbcType=INTEGER},
      dhitchCount = #{record.dhitchCount,jdbcType=INTEGER},
      operateType = #{record.operateType,jdbcType=VARCHAR},
      analyzeDate = #{record.analyzeDate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.transnova.foundation.stat.model.StatCompany">
    update stat_company
    <set>
      <if test="companyId != null">
        companyId = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="vehicleCount != null">
        vehicleCount = #{vehicleCount,jdbcType=INTEGER},
      </if>
      <if test="driverCount != null">
        driverCount = #{driverCount,jdbcType=INTEGER},
      </if>
      <if test="gpsDeviceCount != null">
        gpsDeviceCount = #{gpsDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="videoDeviceCount != null">
        videoDeviceCount = #{videoDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="dmsDeviceCount != null">
        dmsDeviceCount = #{dmsDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="adasDeviceCount != null">
        adasDeviceCount = #{adasDeviceCount,jdbcType=INTEGER},
      </if>
      <if test="eventCount != null">
        eventCount = #{eventCount,jdbcType=INTEGER},
      </if>
      <if test="driveMileages != null">
        driveMileages = #{driveMileages,jdbcType=BIGINT},
      </if>
      <if test="completeMileages != null">
        completeMileages = #{completeMileages,jdbcType=BIGINT},
      </if>
      <if test="highRiskEventCount != null">
        highRiskEventCount = #{highRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="mediumRiskEventCount != null">
        mediumRiskEventCount = #{mediumRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="lowRiskEventCount != null">
        lowRiskEventCount = #{lowRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="overspeedCount != null">
        overspeedCount = #{overspeedCount,jdbcType=INTEGER},
      </if>
      <if test="onlineDriverCount != null">
        onlineDriverCount = #{onlineDriverCount,jdbcType=INTEGER},
      </if>
      <if test="onlineVehicleCount != null">
        onlineVehicleCount = #{onlineVehicleCount,jdbcType=INTEGER},
      </if>
      <if test="outProvinceVehicleCount != null">
        outProvinceVehicleCount = #{outProvinceVehicleCount,jdbcType=INTEGER},
      </if>
      <if test="vhitchCount != null">
        vhitchCount = #{vhitchCount,jdbcType=INTEGER},
      </if>
      <if test="dhitchCount != null">
        dhitchCount = #{dhitchCount,jdbcType=INTEGER},
      </if>
      <if test="operateType != null">
        operateType = #{operateType,jdbcType=VARCHAR},
      </if>
      <if test="analyzeDate != null">
        analyzeDate = #{analyzeDate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.transnova.foundation.stat.model.StatCompany">
    update stat_company
    set companyId = #{companyId,jdbcType=BIGINT},
      vehicleCount = #{vehicleCount,jdbcType=INTEGER},
      driverCount = #{driverCount,jdbcType=INTEGER},
      gpsDeviceCount = #{gpsDeviceCount,jdbcType=INTEGER},
      videoDeviceCount = #{videoDeviceCount,jdbcType=INTEGER},
      dmsDeviceCount = #{dmsDeviceCount,jdbcType=INTEGER},
      adasDeviceCount = #{adasDeviceCount,jdbcType=INTEGER},
      eventCount = #{eventCount,jdbcType=INTEGER},
      driveMileages = #{driveMileages,jdbcType=BIGINT},
      completeMileages = #{completeMileages,jdbcType=BIGINT},
      highRiskEventCount = #{highRiskEventCount,jdbcType=INTEGER},
      mediumRiskEventCount = #{mediumRiskEventCount,jdbcType=INTEGER},
      lowRiskEventCount = #{lowRiskEventCount,jdbcType=INTEGER},
      overspeedCount = #{overspeedCount,jdbcType=INTEGER},
      onlineDriverCount = #{onlineDriverCount,jdbcType=INTEGER},
      onlineVehicleCount = #{onlineVehicleCount,jdbcType=INTEGER},
      outProvinceVehicleCount = #{outProvinceVehicleCount,jdbcType=INTEGER},
      vhitchCount = #{vhitchCount,jdbcType=INTEGER},
      dhitchCount = #{dhitchCount,jdbcType=INTEGER},
      operateType = #{operateType,jdbcType=VARCHAR},
      analyzeDate = #{analyzeDate,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="countVehicles" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
        count(*) as vehicleCount,
        10 as gpsDeviceCount,
        10 as videoDeviceCount,
        10 as adasDeviceCount,
        10 as dmsDeviceCount
    from vehicle where companyId = #{companyId,jdbcType=BIGINT} and deleted = 0
  </select>

  <update id="increaseByPrimaryKeySelective" parameterType="com.transnova.foundation.stat.model.StatCompany">
    update stat_company
    <set>
      <if test="eventCount != null">
        eventCount = eventCount + #{eventCount,jdbcType=INTEGER},
      </if>
      <if test="driveMileages != null">
        driveMileages = driveMileages + #{driveMileages,jdbcType=BIGINT},
      </if>
      <if test="completeMileages != null">
        completeMileages = completeMileages + #{completeMileages,jdbcType=BIGINT},
      </if>
      <if test="highRiskEventCount != null">
        highRiskEventCount = highRiskEventCount + #{highRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="mediumRiskEventCount != null">
        mediumRiskEventCount = mediumRiskEventCount + #{mediumRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="lowRiskEventCount != null">
        lowRiskEventCount = lowRiskEventCount + #{lowRiskEventCount,jdbcType=INTEGER},
      </if>
      <if test="overspeedCount != null">
        overspeedCount = overspeedCount + #{overspeedCount,jdbcType=INTEGER},
      </if>
      <if test="onlineDriverCount != null">
        onlineDriverCount = onlineDriverCount + #{onlineDriverCount,jdbcType=INTEGER},
      </if>
      <if test="onlineVehicleCount != null">
        onlineVehicleCount = onlineVehicleCount + #{onlineVehicleCount,jdbcType=INTEGER},
      </if>
      <if test="outProvinceVehicleCount != null">
        outProvinceVehicleCount = outProvinceVehicleCount + #{outProvinceVehicleCount,jdbcType=INTEGER},
      </if>
      <if test="vhitchCount != null">
        vhitchCount = vhitchCount + #{vhitchCount,jdbcType=INTEGER},
      </if>
      <if test="dhitchCount != null">
        dhitchCount = dhitchCount + #{dhitchCount,jdbcType=INTEGER},
      </if>
      <if test="analyzeDate != null">
        analyzeDate = #{analyzeDate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getStatCompanyRankByExample" parameterType="com.transnova.foundation.stat.mapper.StatCompanyExample" resultMap="StatCompanyRatio">

      select
            t.companyId companyId,
            (select name from company where id = t.companyId) companyName,
            t.ratio ratio
      from
      (
          select
              companyId,
              onlineVehicleCount / vehicleCount ratio
          from
               stat_company
              <if test="_parameter != null">
                <include refid="Example_Where_Clause" />
              </if>
              <if test="orderByClause != null">
                order by ${orderByClause}
              </if>
              <if test="limit != null">
                <if test="offset != null">
                  limit ${offset}, ${limit}
                </if>
                <if test="offset == null">
                  limit ${limit}
                </if>
              </if>
          ) t
  </select>
</mapper>