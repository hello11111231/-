<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transnova.foundation.stat.mapper.StatDailyVehicleEventMapper">
  <resultMap id="BaseResultMap" type="com.transnova.foundation.stat.model.StatDailyVehicleEvent">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="vehicleId" jdbcType="BIGINT" property="vehicleId" />
    <result column="companyId" jdbcType="BIGINT" property="companyId" />
    <result column="operateType" jdbcType="VARCHAR" property="operateType" />
    <result column="eventTypeCode" jdbcType="VARCHAR" property="eventTypeCode" />
    <result column="eventCode" jdbcType="VARCHAR" property="eventCode" />
    <result column="eventCount" jdbcType="INTEGER" property="eventCount" />
    <result column="analyzeDate" jdbcType="INTEGER" property="analyzeDate" />
    <result column="orgAndHierarchyCode" jdbcType="VARCHAR" property="orgAndHierarchyCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vehicleId, companyId, operateType, eventTypeCode, eventCode, eventCount, analyzeDate, 
    orgAndHierarchyCode
  </sql>
  <select id="selectByExample" parameterType="com.transnova.foundation.stat.mapper.StatDailyVehicleEventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stat_daily_vehicle_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stat_daily_vehicle_event
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from stat_daily_vehicle_event
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.transnova.foundation.stat.mapper.StatDailyVehicleEventExample">
    delete from stat_daily_vehicle_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.transnova.foundation.stat.model.StatDailyVehicleEvent">
    insert into stat_daily_vehicle_event (id, vehicleId, companyId, 
      operateType, eventTypeCode, eventCode, 
      eventCount, analyzeDate, orgAndHierarchyCode
      )
    values (#{id,jdbcType=BIGINT}, #{vehicleId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, 
      #{operateType,jdbcType=VARCHAR}, #{eventTypeCode,jdbcType=VARCHAR}, #{eventCode,jdbcType=VARCHAR}, 
      #{eventCount,jdbcType=INTEGER}, #{analyzeDate,jdbcType=INTEGER}, #{orgAndHierarchyCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.transnova.foundation.stat.model.StatDailyVehicleEvent">
    insert into stat_daily_vehicle_event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="vehicleId != null">
        vehicleId,
      </if>
      <if test="companyId != null">
        companyId,
      </if>
      <if test="operateType != null">
        operateType,
      </if>
      <if test="eventTypeCode != null">
        eventTypeCode,
      </if>
      <if test="eventCode != null">
        eventCode,
      </if>
      <if test="eventCount != null">
        eventCount,
      </if>
      <if test="analyzeDate != null">
        analyzeDate,
      </if>
      <if test="orgAndHierarchyCode != null">
        orgAndHierarchyCode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="vehicleId != null">
        #{vehicleId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="operateType != null">
        #{operateType,jdbcType=VARCHAR},
      </if>
      <if test="eventTypeCode != null">
        #{eventTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="eventCode != null">
        #{eventCode,jdbcType=VARCHAR},
      </if>
      <if test="eventCount != null">
        #{eventCount,jdbcType=INTEGER},
      </if>
      <if test="analyzeDate != null">
        #{analyzeDate,jdbcType=INTEGER},
      </if>
      <if test="orgAndHierarchyCode != null">
        #{orgAndHierarchyCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.transnova.foundation.stat.mapper.StatDailyVehicleEventExample" resultType="java.lang.Long">
    select count(*) from stat_daily_vehicle_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stat_daily_vehicle_event
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.vehicleId != null">
        vehicleId = #{record.vehicleId,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        companyId = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.operateType != null">
        operateType = #{record.operateType,jdbcType=VARCHAR},
      </if>
      <if test="record.eventTypeCode != null">
        eventTypeCode = #{record.eventTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.eventCode != null">
        eventCode = #{record.eventCode,jdbcType=VARCHAR},
      </if>
      <if test="record.eventCount != null">
        eventCount = #{record.eventCount,jdbcType=INTEGER},
      </if>
      <if test="record.analyzeDate != null">
        analyzeDate = #{record.analyzeDate,jdbcType=INTEGER},
      </if>
      <if test="record.orgAndHierarchyCode != null">
        orgAndHierarchyCode = #{record.orgAndHierarchyCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stat_daily_vehicle_event
    set id = #{record.id,jdbcType=BIGINT},
      vehicleId = #{record.vehicleId,jdbcType=BIGINT},
      companyId = #{record.companyId,jdbcType=BIGINT},
      operateType = #{record.operateType,jdbcType=VARCHAR},
      eventTypeCode = #{record.eventTypeCode,jdbcType=VARCHAR},
      eventCode = #{record.eventCode,jdbcType=VARCHAR},
      eventCount = #{record.eventCount,jdbcType=INTEGER},
      analyzeDate = #{record.analyzeDate,jdbcType=INTEGER},
      orgAndHierarchyCode = #{record.orgAndHierarchyCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.transnova.foundation.stat.model.StatDailyVehicleEvent">
    update stat_daily_vehicle_event
    <set>
      <if test="vehicleId != null">
        vehicleId = #{vehicleId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        companyId = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="operateType != null">
        operateType = #{operateType,jdbcType=VARCHAR},
      </if>
      <if test="eventTypeCode != null">
        eventTypeCode = #{eventTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="eventCode != null">
        eventCode = #{eventCode,jdbcType=VARCHAR},
      </if>
      <if test="eventCount != null">
        eventCount = #{eventCount,jdbcType=INTEGER},
      </if>
      <if test="analyzeDate != null">
        analyzeDate = #{analyzeDate,jdbcType=INTEGER},
      </if>
      <if test="orgAndHierarchyCode != null">
        orgAndHierarchyCode = #{orgAndHierarchyCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.transnova.foundation.stat.model.StatDailyVehicleEvent">
    update stat_daily_vehicle_event
    set vehicleId = #{vehicleId,jdbcType=BIGINT},
      companyId = #{companyId,jdbcType=BIGINT},
      operateType = #{operateType,jdbcType=VARCHAR},
      eventTypeCode = #{eventTypeCode,jdbcType=VARCHAR},
      eventCode = #{eventCode,jdbcType=VARCHAR},
      eventCount = #{eventCount,jdbcType=INTEGER},
      analyzeDate = #{analyzeDate,jdbcType=INTEGER},
      orgAndHierarchyCode = #{orgAndHierarchyCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into stat_daily_vehicle_event
    (id, vehicleId, companyId, operateType, eventTypeCode, eventCode, eventCount, analyzeDate, 
      orgAndHierarchyCode)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.vehicleId,jdbcType=BIGINT}, #{item.companyId,jdbcType=BIGINT}, 
        #{item.operateType,jdbcType=VARCHAR}, #{item.eventTypeCode,jdbcType=VARCHAR}, #{item.eventCode,jdbcType=VARCHAR}, 
        #{item.eventCount,jdbcType=INTEGER}, #{item.analyzeDate,jdbcType=INTEGER}, #{item.orgAndHierarchyCode,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into stat_daily_vehicle_event (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'vehicleId' == column.value">
          #{item.vehicleId,jdbcType=BIGINT}
        </if>
        <if test="'companyId' == column.value">
          #{item.companyId,jdbcType=BIGINT}
        </if>
        <if test="'operateType' == column.value">
          #{item.operateType,jdbcType=VARCHAR}
        </if>
        <if test="'eventTypeCode' == column.value">
          #{item.eventTypeCode,jdbcType=VARCHAR}
        </if>
        <if test="'eventCode' == column.value">
          #{item.eventCode,jdbcType=VARCHAR}
        </if>
        <if test="'eventCount' == column.value">
          #{item.eventCount,jdbcType=INTEGER}
        </if>
        <if test="'analyzeDate' == column.value">
          #{item.analyzeDate,jdbcType=INTEGER}
        </if>
        <if test="'orgAndHierarchyCode' == column.value">
          #{item.orgAndHierarchyCode,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>