<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transnova.foundation.driver.mapper.DriverVehicleTaskMapper">
  <resultMap id="BaseResultMap" type="com.transnova.foundation.driver.model.DriverVehicleTask">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="driverVehicleId" jdbcType="BIGINT" property="driverVehicleId" />
    <result column="driverid" jdbcType="BIGINT" property="driverid" />
    <result column="vehicleId" jdbcType="BIGINT" property="vehicleId" />
    <result column="startDate" jdbcType="TIMESTAMP" property="startDate" />
    <result column="startLng" jdbcType="DECIMAL" property="startLng" />
    <result column="startLat" jdbcType="DECIMAL" property="startLat" />
    <result column="endDate" jdbcType="TIMESTAMP" property="endDate" />
    <result column="endLng" jdbcType="DECIMAL" property="endLng" />
    <result column="endLat" jdbcType="DECIMAL" property="endLat" />
    <result column="score" jdbcType="DECIMAL" property="score" />
    <result column="evaluate" jdbcType="VARCHAR" property="evaluate" />
    <result column="star" jdbcType="DECIMAL" property="star" />
    <result column="mileage" jdbcType="DECIMAL" property="mileage" />
    <result column="drivingTime" jdbcType="INTEGER" property="drivingTime" />
    <result column="averageSpeed" jdbcType="DECIMAL" property="averageSpeed" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    id, driverVehicleId, driverid, vehicleId, startDate, startLng, startLat, endDate, 
    endLng, endLat, score, evaluate, star, mileage, drivingTime, averageSpeed
  </sql>
  <select id="selectByExample" parameterType="com.transnova.foundation.driver.mapper.DriverVehicleTaskExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from driver_vehicle_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from driver_vehicle_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    delete from driver_vehicle_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.transnova.foundation.driver.mapper.DriverVehicleTaskExample">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    delete from driver_vehicle_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.transnova.foundation.driver.model.DriverVehicleTask">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    insert into driver_vehicle_task (id, driverVehicleId, driverid, 
      vehicleId, startDate, startLng, 
      startLat, endDate, endLng, 
      endLat, score, evaluate, 
      star, mileage, drivingTime, 
      averageSpeed)
    values (#{id,jdbcType=BIGINT}, #{driverVehicleId,jdbcType=BIGINT}, #{driverid,jdbcType=BIGINT}, 
      #{vehicleId,jdbcType=BIGINT}, #{startDate,jdbcType=TIMESTAMP}, #{startLng,jdbcType=DECIMAL}, 
      #{startLat,jdbcType=DECIMAL}, #{endDate,jdbcType=TIMESTAMP}, #{endLng,jdbcType=DECIMAL}, 
      #{endLat,jdbcType=DECIMAL}, #{score,jdbcType=DECIMAL}, #{evaluate,jdbcType=VARCHAR}, 
      #{star,jdbcType=DECIMAL}, #{mileage,jdbcType=DECIMAL}, #{drivingTime,jdbcType=INTEGER}, 
      #{averageSpeed,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.transnova.foundation.driver.model.DriverVehicleTask">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    insert into driver_vehicle_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="driverVehicleId != null">
        driverVehicleId,
      </if>
      <if test="driverid != null">
        driverid,
      </if>
      <if test="vehicleId != null">
        vehicleId,
      </if>
      <if test="startDate != null">
        startDate,
      </if>
      <if test="startLng != null">
        startLng,
      </if>
      <if test="startLat != null">
        startLat,
      </if>
      <if test="endDate != null">
        endDate,
      </if>
      <if test="endLng != null">
        endLng,
      </if>
      <if test="endLat != null">
        endLat,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="evaluate != null">
        evaluate,
      </if>
      <if test="star != null">
        star,
      </if>
      <if test="mileage != null">
        mileage,
      </if>
      <if test="drivingTime != null">
        drivingTime,
      </if>
      <if test="averageSpeed != null">
        averageSpeed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="driverVehicleId != null">
        #{driverVehicleId,jdbcType=BIGINT},
      </if>
      <if test="driverid != null">
        #{driverid,jdbcType=BIGINT},
      </if>
      <if test="vehicleId != null">
        #{vehicleId,jdbcType=BIGINT},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startLng != null">
        #{startLng,jdbcType=DECIMAL},
      </if>
      <if test="startLat != null">
        #{startLat,jdbcType=DECIMAL},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endLng != null">
        #{endLng,jdbcType=DECIMAL},
      </if>
      <if test="endLat != null">
        #{endLat,jdbcType=DECIMAL},
      </if>
      <if test="score != null">
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="evaluate != null">
        #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        #{star,jdbcType=DECIMAL},
      </if>
      <if test="mileage != null">
        #{mileage,jdbcType=DECIMAL},
      </if>
      <if test="drivingTime != null">
        #{drivingTime,jdbcType=INTEGER},
      </if>
      <if test="averageSpeed != null">
        #{averageSpeed,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.transnova.foundation.driver.mapper.DriverVehicleTaskExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    select count(*) from driver_vehicle_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    update driver_vehicle_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.driverVehicleId != null">
        driverVehicleId = #{record.driverVehicleId,jdbcType=BIGINT},
      </if>
      <if test="record.driverid != null">
        driverid = #{record.driverid,jdbcType=BIGINT},
      </if>
      <if test="record.vehicleId != null">
        vehicleId = #{record.vehicleId,jdbcType=BIGINT},
      </if>
      <if test="record.startDate != null">
        startDate = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startLng != null">
        startLng = #{record.startLng,jdbcType=DECIMAL},
      </if>
      <if test="record.startLat != null">
        startLat = #{record.startLat,jdbcType=DECIMAL},
      </if>
      <if test="record.endDate != null">
        endDate = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endLng != null">
        endLng = #{record.endLng,jdbcType=DECIMAL},
      </if>
      <if test="record.endLat != null">
        endLat = #{record.endLat,jdbcType=DECIMAL},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.evaluate != null">
        evaluate = #{record.evaluate,jdbcType=VARCHAR},
      </if>
      <if test="record.star != null">
        star = #{record.star,jdbcType=DECIMAL},
      </if>
      <if test="record.mileage != null">
        mileage = #{record.mileage,jdbcType=DECIMAL},
      </if>
      <if test="record.drivingTime != null">
        drivingTime = #{record.drivingTime,jdbcType=INTEGER},
      </if>
      <if test="record.averageSpeed != null">
        averageSpeed = #{record.averageSpeed,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    update driver_vehicle_task
    set id = #{record.id,jdbcType=BIGINT},
      driverVehicleId = #{record.driverVehicleId,jdbcType=BIGINT},
      driverid = #{record.driverid,jdbcType=BIGINT},
      vehicleId = #{record.vehicleId,jdbcType=BIGINT},
      startDate = #{record.startDate,jdbcType=TIMESTAMP},
      startLng = #{record.startLng,jdbcType=DECIMAL},
      startLat = #{record.startLat,jdbcType=DECIMAL},
      endDate = #{record.endDate,jdbcType=TIMESTAMP},
      endLng = #{record.endLng,jdbcType=DECIMAL},
      endLat = #{record.endLat,jdbcType=DECIMAL},
      score = #{record.score,jdbcType=DECIMAL},
      evaluate = #{record.evaluate,jdbcType=VARCHAR},
      star = #{record.star,jdbcType=DECIMAL},
      mileage = #{record.mileage,jdbcType=DECIMAL},
      drivingTime = #{record.drivingTime,jdbcType=INTEGER},
      averageSpeed = #{record.averageSpeed,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.transnova.foundation.driver.model.DriverVehicleTask">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    update driver_vehicle_task
    <set>
      <if test="driverVehicleId != null">
        driverVehicleId = #{driverVehicleId,jdbcType=BIGINT},
      </if>
      <if test="driverid != null">
        driverid = #{driverid,jdbcType=BIGINT},
      </if>
      <if test="vehicleId != null">
        vehicleId = #{vehicleId,jdbcType=BIGINT},
      </if>
      <if test="startDate != null">
        startDate = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startLng != null">
        startLng = #{startLng,jdbcType=DECIMAL},
      </if>
      <if test="startLat != null">
        startLat = #{startLat,jdbcType=DECIMAL},
      </if>
      <if test="endDate != null">
        endDate = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endLng != null">
        endLng = #{endLng,jdbcType=DECIMAL},
      </if>
      <if test="endLat != null">
        endLat = #{endLat,jdbcType=DECIMAL},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="evaluate != null">
        evaluate = #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        star = #{star,jdbcType=DECIMAL},
      </if>
      <if test="mileage != null">
        mileage = #{mileage,jdbcType=DECIMAL},
      </if>
      <if test="drivingTime != null">
        drivingTime = #{drivingTime,jdbcType=INTEGER},
      </if>
      <if test="averageSpeed != null">
        averageSpeed = #{averageSpeed,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.transnova.foundation.driver.model.DriverVehicleTask">
    <!--
      WARNING - @mbg.generated  This element was generated on Fri May 15 15:52:03 CST 2020. by MyBatis Generator, do not modify.
    -->
    update driver_vehicle_task
    set driverVehicleId = #{driverVehicleId,jdbcType=BIGINT},
      driverid = #{driverid,jdbcType=BIGINT},
      vehicleId = #{vehicleId,jdbcType=BIGINT},
      startDate = #{startDate,jdbcType=TIMESTAMP},
      startLng = #{startLng,jdbcType=DECIMAL},
      startLat = #{startLat,jdbcType=DECIMAL},
      endDate = #{endDate,jdbcType=TIMESTAMP},
      endLng = #{endLng,jdbcType=DECIMAL},
      endLat = #{endLat,jdbcType=DECIMAL},
      score = #{score,jdbcType=DECIMAL},
      evaluate = #{evaluate,jdbcType=VARCHAR},
      star = #{star,jdbcType=DECIMAL},
      mileage = #{mileage,jdbcType=DECIMAL},
      drivingTime = #{drivingTime,jdbcType=INTEGER},
      averageSpeed = #{averageSpeed,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>