<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transnova.foundation.vehicleBasic.mapper.VehicleYearlyLogMapper">
  <resultMap id="BaseResultMap" type="com.transnova.foundation.vehicleBasic.model.VehicleYearlyLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="vehicleId" jdbcType="BIGINT" property="vehicleId" />
    <result column="examineDate" jdbcType="DATE" property="examineDate" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="nextExamineDate" jdbcType="DATE" property="nextExamineDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="updateUserId" jdbcType="BIGINT" property="updateUserId" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="createUserId" jdbcType="BIGINT" property="createUserId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vehicleId, examineDate, amount, nextExamineDate, remark, updateUserId, updateTime, 
    createUserId, createTime, deleted
  </sql>
  <select id="selectByExample" parameterType="com.transnova.foundation.vehicleBasic.mapper.VehicleYearlyLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vehicle_yearly_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vehicle_yearly_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vehicle_yearly_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.transnova.foundation.vehicleBasic.mapper.VehicleYearlyLogExample">
    delete from vehicle_yearly_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.transnova.foundation.vehicleBasic.model.VehicleYearlyLog">
    insert into vehicle_yearly_log (id, vehicleId, examineDate, 
      amount, nextExamineDate, remark, 
      updateUserId, updateTime, createUserId, 
      createTime, deleted)
    values (#{id,jdbcType=BIGINT}, #{vehicleId,jdbcType=BIGINT}, #{examineDate,jdbcType=DATE}, 
      #{amount,jdbcType=DECIMAL}, #{nextExamineDate,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, 
      #{updateUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.transnova.foundation.vehicleBasic.model.VehicleYearlyLog">
    insert into vehicle_yearly_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="vehicleId != null">
        vehicleId,
      </if>
      <if test="examineDate != null">
        examineDate,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="nextExamineDate != null">
        nextExamineDate,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="updateUserId != null">
        updateUserId,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="createUserId != null">
        createUserId,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="vehicleId != null">
        #{vehicleId,jdbcType=BIGINT},
      </if>
      <if test="examineDate != null">
        #{examineDate,jdbcType=DATE},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="nextExamineDate != null">
        #{nextExamineDate,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.transnova.foundation.vehicleBasic.mapper.VehicleYearlyLogExample" resultType="java.lang.Long">
    select count(*) from vehicle_yearly_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vehicle_yearly_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.vehicleId != null">
        vehicleId = #{record.vehicleId,jdbcType=BIGINT},
      </if>
      <if test="record.examineDate != null">
        examineDate = #{record.examineDate,jdbcType=DATE},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.nextExamineDate != null">
        nextExamineDate = #{record.nextExamineDate,jdbcType=DATE},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserId != null">
        updateUserId = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        createUserId = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vehicle_yearly_log
    set id = #{record.id,jdbcType=BIGINT},
      vehicleId = #{record.vehicleId,jdbcType=BIGINT},
      examineDate = #{record.examineDate,jdbcType=DATE},
      amount = #{record.amount,jdbcType=DECIMAL},
      nextExamineDate = #{record.nextExamineDate,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      updateUserId = #{record.updateUserId,jdbcType=BIGINT},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      createUserId = #{record.createUserId,jdbcType=BIGINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.transnova.foundation.vehicleBasic.model.VehicleYearlyLog">
    update vehicle_yearly_log
    <set>
      <if test="vehicleId != null">
        vehicleId = #{vehicleId,jdbcType=BIGINT},
      </if>
      <if test="examineDate != null">
        examineDate = #{examineDate,jdbcType=DATE},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="nextExamineDate != null">
        nextExamineDate = #{nextExamineDate,jdbcType=DATE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        updateUserId = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        createUserId = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.transnova.foundation.vehicleBasic.model.VehicleYearlyLog">
    update vehicle_yearly_log
    set vehicleId = #{vehicleId,jdbcType=BIGINT},
      examineDate = #{examineDate,jdbcType=DATE},
      amount = #{amount,jdbcType=DECIMAL},
      nextExamineDate = #{nextExamineDate,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      updateUserId = #{updateUserId,jdbcType=BIGINT},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      createUserId = #{createUserId,jdbcType=BIGINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>