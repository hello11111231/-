<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transnova.foundation.stat.mapper.VehiclePatrolMapper">
  <resultMap id="BaseResultMap" type="com.transnova.foundation.stat.model.VehiclePatrol">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="vehicleId" jdbcType="BIGINT" property="vehicleId" />
    <result column="companyId" jdbcType="BIGINT" property="companyId" />
    <result column="vehicleOperateType" jdbcType="VARCHAR" property="vehicleOperateType" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="reportTime" jdbcType="BIGINT" property="reportTime" />
    <result column="speed" jdbcType="REAL" property="speed" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="vehicleStatus" jdbcType="INTEGER" property="vehicleStatus" />
    <result column="vehicleWarnStatus" jdbcType="INTEGER" property="vehicleWarnStatus" />
    <result column="mileages" jdbcType="INTEGER" property="mileages" />
    <result column="totalMileages" jdbcType="INTEGER" property="totalMileages" />
    <result column="createTime" jdbcType="BIGINT" property="createTime" />
    <result column="createDay" jdbcType="INTEGER" property="createDay" />
    <result column="vehicleNumber" jdbcType="VARCHAR" property="vehicleNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vehicleId, companyId, vehicleOperateType, longitude, latitude, reportTime, speed, 
    state, vehicleStatus, vehicleWarnStatus, mileages, totalMileages, createTime, createDay
  </sql>
  <select id="selectByExample" parameterType="com.transnova.foundation.stat.mapper.VehiclePatrolExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vehicle_patrol
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vehicle_patrol
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vehicle_patrol
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.transnova.foundation.stat.mapper.VehiclePatrolExample">
    delete from vehicle_patrol
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.transnova.foundation.stat.model.VehiclePatrol">
    insert into vehicle_patrol (id, vehicleId, companyId, 
      vehicleOperateType, longitude, latitude, 
      reportTime, speed, state, 
      vehicleStatus, vehicleWarnStatus, mileages, 
      totalMileages, createTime, createDay
      )
    values (#{id,jdbcType=BIGINT}, #{vehicleId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, 
      #{vehicleOperateType,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE}, 
      #{reportTime,jdbcType=BIGINT}, #{speed,jdbcType=REAL}, #{state,jdbcType=CHAR}, 
      #{vehicleStatus,jdbcType=INTEGER}, #{vehicleWarnStatus,jdbcType=INTEGER}, #{mileages,jdbcType=INTEGER}, 
      #{totalMileages,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{createDay,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.transnova.foundation.stat.model.VehiclePatrol">
    insert into vehicle_patrol
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="vehicleId != null">
        vehicleId,
      </if>
      <if test="companyId != null">
        companyId,
      </if>
      <if test="vehicleOperateType != null">
        vehicleOperateType,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="reportTime != null">
        reportTime,
      </if>
      <if test="speed != null">
        speed,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="vehicleStatus != null">
        vehicleStatus,
      </if>
      <if test="vehicleWarnStatus != null">
        vehicleWarnStatus,
      </if>
      <if test="mileages != null">
        mileages,
      </if>
      <if test="totalMileages != null">
        totalMileages,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createDay != null">
        createDay,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="vehicleId != null">
        #{vehicleId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="vehicleOperateType != null">
        #{vehicleOperateType,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="reportTime != null">
        #{reportTime,jdbcType=BIGINT},
      </if>
      <if test="speed != null">
        #{speed,jdbcType=REAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="vehicleStatus != null">
        #{vehicleStatus,jdbcType=INTEGER},
      </if>
      <if test="vehicleWarnStatus != null">
        #{vehicleWarnStatus,jdbcType=INTEGER},
      </if>
      <if test="mileages != null">
        #{mileages,jdbcType=INTEGER},
      </if>
      <if test="totalMileages != null">
        #{totalMileages,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createDay != null">
        #{createDay,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.transnova.foundation.stat.mapper.VehiclePatrolExample" resultType="java.lang.Long">
    select count(*) from vehicle_patrol
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vehicle_patrol
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.vehicleId != null">
        vehicleId = #{record.vehicleId,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        companyId = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.vehicleOperateType != null">
        vehicleOperateType = #{record.vehicleOperateType,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.reportTime != null">
        reportTime = #{record.reportTime,jdbcType=BIGINT},
      </if>
      <if test="record.speed != null">
        speed = #{record.speed,jdbcType=REAL},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.vehicleStatus != null">
        vehicleStatus = #{record.vehicleStatus,jdbcType=INTEGER},
      </if>
      <if test="record.vehicleWarnStatus != null">
        vehicleWarnStatus = #{record.vehicleWarnStatus,jdbcType=INTEGER},
      </if>
      <if test="record.mileages != null">
        mileages = #{record.mileages,jdbcType=INTEGER},
      </if>
      <if test="record.totalMileages != null">
        totalMileages = #{record.totalMileages,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.createDay != null">
        createDay = #{record.createDay,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vehicle_patrol
    set id = #{record.id,jdbcType=BIGINT},
      vehicleId = #{record.vehicleId,jdbcType=BIGINT},
      companyId = #{record.companyId,jdbcType=BIGINT},
      vehicleOperateType = #{record.vehicleOperateType,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      reportTime = #{record.reportTime,jdbcType=BIGINT},
      speed = #{record.speed,jdbcType=REAL},
      state = #{record.state,jdbcType=CHAR},
      vehicleStatus = #{record.vehicleStatus,jdbcType=INTEGER},
      vehicleWarnStatus = #{record.vehicleWarnStatus,jdbcType=INTEGER},
      mileages = #{record.mileages,jdbcType=INTEGER},
      totalMileages = #{record.totalMileages,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=BIGINT},
      createDay = #{record.createDay,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.transnova.foundation.stat.model.VehiclePatrol">
    update vehicle_patrol
    <set>
      <if test="vehicleId != null">
        vehicleId = #{vehicleId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        companyId = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="vehicleOperateType != null">
        vehicleOperateType = #{vehicleOperateType,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="reportTime != null">
        reportTime = #{reportTime,jdbcType=BIGINT},
      </if>
      <if test="speed != null">
        speed = #{speed,jdbcType=REAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="vehicleStatus != null">
        vehicleStatus = #{vehicleStatus,jdbcType=INTEGER},
      </if>
      <if test="vehicleWarnStatus != null">
        vehicleWarnStatus = #{vehicleWarnStatus,jdbcType=INTEGER},
      </if>
      <if test="mileages != null">
        mileages = #{mileages,jdbcType=INTEGER},
      </if>
      <if test="totalMileages != null">
        totalMileages = #{totalMileages,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createDay != null">
        createDay = #{createDay,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.transnova.foundation.stat.model.VehiclePatrol">
    update vehicle_patrol
    set vehicleId = #{vehicleId,jdbcType=BIGINT},
      companyId = #{companyId,jdbcType=BIGINT},
      vehicleOperateType = #{vehicleOperateType,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      reportTime = #{reportTime,jdbcType=BIGINT},
      speed = #{speed,jdbcType=REAL},
      state = #{state,jdbcType=CHAR},
      vehicleStatus = #{vehicleStatus,jdbcType=INTEGER},
      vehicleWarnStatus = #{vehicleWarnStatus,jdbcType=INTEGER},
      mileages = #{mileages,jdbcType=INTEGER},
      totalMileages = #{totalMileages,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=BIGINT},
      createDay = #{createDay,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into vehicle_patrol
    (id, vehicleId, companyId, vehicleOperateType, longitude, latitude, reportTime, speed, 
      state, vehicleStatus, vehicleWarnStatus, mileages, totalMileages, createTime, createDay
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.vehicleId,jdbcType=BIGINT}, #{item.companyId,jdbcType=BIGINT}, 
        #{item.vehicleOperateType,jdbcType=VARCHAR}, #{item.longitude,jdbcType=DOUBLE}, 
        #{item.latitude,jdbcType=DOUBLE}, #{item.reportTime,jdbcType=BIGINT}, #{item.speed,jdbcType=REAL}, 
        #{item.state,jdbcType=CHAR}, #{item.vehicleStatus,jdbcType=INTEGER}, #{item.vehicleWarnStatus,jdbcType=INTEGER}, 
        #{item.mileages,jdbcType=INTEGER}, #{item.totalMileages,jdbcType=INTEGER}, #{item.createTime,jdbcType=BIGINT}, 
        #{item.createDay,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into vehicle_patrol (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'vehicleId' == column.value">
          #{item.vehicleId,jdbcType=BIGINT}
        </if>
        <if test="'companyId' == column.value">
          #{item.companyId,jdbcType=BIGINT}
        </if>
        <if test="'vehicleOperateType' == column.value">
          #{item.vehicleOperateType,jdbcType=VARCHAR}
        </if>
        <if test="'longitude' == column.value">
          #{item.longitude,jdbcType=DOUBLE}
        </if>
        <if test="'latitude' == column.value">
          #{item.latitude,jdbcType=DOUBLE}
        </if>
        <if test="'reportTime' == column.value">
          #{item.reportTime,jdbcType=BIGINT}
        </if>
        <if test="'speed' == column.value">
          #{item.speed,jdbcType=REAL}
        </if>
        <if test="'state' == column.value">
          #{item.state,jdbcType=CHAR}
        </if>
        <if test="'vehicleStatus' == column.value">
          #{item.vehicleStatus,jdbcType=INTEGER}
        </if>
        <if test="'vehicleWarnStatus' == column.value">
          #{item.vehicleWarnStatus,jdbcType=INTEGER}
        </if>
        <if test="'mileages' == column.value">
          #{item.mileages,jdbcType=INTEGER}
        </if>
        <if test="'totalMileages' == column.value">
          #{item.totalMileages,jdbcType=INTEGER}
        </if>
        <if test="'createTime' == column.value">
          #{item.createTime,jdbcType=BIGINT}
        </if>
        <if test="'createDay' == column.value">
          #{item.createDay,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>

  <select id="findVehiclePatrolReport" parameterType="map" resultMap="BaseResultMap">
      select vehicleId, vehicleOperateType, longitude, latitude, reportTime, vp.state, vehicleWarnStatus,createDay, v.vehicleNumber as vehicleNumber, vp.createTime
      from vehicle_patrol vp
      left join vehicle v on v.id = vp.vehicleId
      where vp.createDay = #{createDay}
      and vp.companyId = #{companyId}
      order by vp.createTime asc
  </select>

  <delete id="deleteOldData" parameterType="map">
    <![CDATA[
      delete from vehicle_patrol where createTime < unix_timestamp(now())*1000-3600*1000*24*#{day}  ;
    ]]>
  </delete>
</mapper>