<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transnova.foundation.vehicle.mapper.VehicleMapper">
    <resultMap id="BaseResultMap" type="com.transnova.foundation.vehicle.model.Vehicle">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="userId" jdbcType="BIGINT" property="userId"/>
        <result column="companyId" jdbcType="BIGINT" property="companyId"/>
        <result column="vehicleNumber" jdbcType="VARCHAR" property="vehicleNumber"/>
        <result column="vehicleType" jdbcType="VARCHAR" property="vehicleType"/>
        <result column="vin" jdbcType="VARCHAR" property="vin"/>
        <result column="model" jdbcType="VARCHAR" property="model"/>
        <result column="ownerName" jdbcType="VARCHAR" property="ownerName"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="motorNumber" jdbcType="VARCHAR" property="motorNumber"/>
        <result column="registerDate" jdbcType="DATE" property="registerDate"/>
        <result column="issueDate" jdbcType="DATE" property="issueDate"/>
        <result column="purpose" jdbcType="VARCHAR" property="purpose"/>
        <result column="capacity" jdbcType="INTEGER" property="capacity"/>
        <result column="curbWeight" jdbcType="INTEGER" property="curbWeight"/>
        <result column="outsideDimensions" jdbcType="VARCHAR" property="outsideDimensions"/>
        <result column="bodyColor" jdbcType="VARCHAR" property="bodyColor"/>
        <result column="energyType" jdbcType="VARCHAR" property="energyType"/>
        <result column="plateColor" jdbcType="VARCHAR" property="plateColor"/>
        <result column="techLevel" jdbcType="VARCHAR" property="techLevel"/>
        <result column="operateTypeId" jdbcType="VARCHAR" property="operateTypeId"/>
        <result column="axisCount" jdbcType="INTEGER" property="axisCount"/>
        <result column="deviceId" jdbcType="BIGINT" property="deviceId"/>
        <result column="expirationDate" jdbcType="DATE" property="expirationDate"/>
        <result column="tankExpirationDate" jdbcType="DATE" property="tankExpirationDate"/>
        <result column="policyExpirationDate" jdbcType="DATE" property="policyExpirationDate"/>
        <result column="licenseExpirationDate" jdbcType="DATE" property="licenseExpirationDate"/>
        <result column="isOpenService" jdbcType="BIT" property="isOpenService"/>
        <result column="fileIntegrity" jdbcType="DECIMAL" property="fileIntegrity"/>
        <result column="createUserId" jdbcType="BIGINT" property="createUserId"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updateUserId" jdbcType="BIGINT" property="updateUserId"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="extcol" jdbcType="CHAR" property="extcol"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="protocol" jdbcType="VARCHAR" property="protocol"/>
        <result column="orgCode" jdbcType="VARCHAR" property="orgCode" />
        <result column="hierarchyCode" jdbcType="VARCHAR" property="hierarchyCode" />
        <result column="serviceExpDate" jdbcType="DATE" property="serviceExpDate" />
        <result column="line" jdbcType="VARCHAR" property="line"/>
    </resultMap>
    <resultMap id="VehicleSituationMap" type="com.transnova.foundation.vehicle.model.VehicleSituation">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="vehicleNumber" jdbcType="VARCHAR" property="vehicleNumber" />
        <result column="vehicleOperate" jdbcType="VARCHAR" property="vehicleOperate" />
        <result column="model" jdbcType="VARCHAR" property="model" />
        <result column="color" jdbcType="VARCHAR" property="color" />
        <result column="deviceSN" jdbcType="VARCHAR" property="deviceSN" />
        <result column="sim" jdbcType="VARCHAR" property="sim" />
        <result column="lastReportLongitude" jdbcType="DOUBLE" property="lastReportLongitude" />
        <result column="lastReportLatitude" jdbcType="DOUBLE" property="lastReportLatitude" />
        <result column="lastReportTime" jdbcType="BIGINT" property="lastReportTime" />
        <result column="lastReportSpeed" jdbcType="INTEGER" property="lastReportSpeed" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, userId, companyId, vehicleNumber, vehicleType, vin, model, ownerName, address, 
    motorNumber, registerDate, issueDate, purpose, capacity, curbWeight, outsideDimensions, 
    bodyColor, energyType, plateColor, techLevel, operateTypeId, axisCount, deviceId, 
    expirationDate, tankExpirationDate, policyExpirationDate, licenseExpirationDate, 
    isOpenService, fileIntegrity, createUserId, createTime, updateUserId, updateTime, 
    extcol, deleted, state, remark, protocol, orgCode, hierarchyCode, serviceExpDate,line
  </sql>
    <select id="selectByExample" parameterType="com.transnova.foundation.vehicle.mapper.VehicleExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from vehicle
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from vehicle
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vehicle
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.transnova.foundation.vehicle.mapper.VehicleExample">
        delete from vehicle
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.transnova.foundation.vehicle.model.Vehicle">
    insert into vehicle (id, userId, companyId, 
      vehicleNumber, vehicleType, vin, 
      model, ownerName, address, 
      motorNumber, registerDate, issueDate, 
      purpose, capacity, curbWeight, 
      outsideDimensions, bodyColor, energyType, 
      plateColor, techLevel, operateTypeId, 
      axisCount, deviceId, expirationDate, 
      tankExpirationDate, policyExpirationDate, licenseExpirationDate, 
      isOpenService, fileIntegrity, createUserId, 
      createTime, updateUserId, updateTime, 
      extcol, deleted, state, remark,
      protocol, orgCode, hierarchyCode,
      serviceExpDate,line)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, 
      #{vehicleNumber,jdbcType=VARCHAR}, #{vehicleType,jdbcType=VARCHAR}, #{vin,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{ownerName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{motorNumber,jdbcType=VARCHAR}, #{registerDate,jdbcType=DATE}, #{issueDate,jdbcType=DATE}, 
      #{purpose,jdbcType=VARCHAR}, #{capacity,jdbcType=INTEGER}, #{curbWeight,jdbcType=INTEGER}, 
      #{outsideDimensions,jdbcType=VARCHAR}, #{bodyColor,jdbcType=VARCHAR}, #{energyType,jdbcType=VARCHAR}, 
      #{plateColor,jdbcType=VARCHAR}, #{techLevel,jdbcType=VARCHAR}, #{operateTypeId,jdbcType=VARCHAR}, 
      #{axisCount,jdbcType=INTEGER}, #{deviceId,jdbcType=BIGINT}, #{expirationDate,jdbcType=DATE}, 
      #{tankExpirationDate,jdbcType=DATE}, #{policyExpirationDate,jdbcType=DATE}, #{licenseExpirationDate,jdbcType=DATE}, 
      #{isOpenService,jdbcType=BIT}, #{fileIntegrity,jdbcType=DECIMAL}, #{createUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{extcol,jdbcType=CHAR}, #{deleted,jdbcType=BIT}, #{state,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{protocol,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR}, #{hierarchyCode,jdbcType=VARCHAR},
      #{serviceExpDate,jdbcType=DATE},#{line,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.transnova.foundation.vehicle.model.Vehicle">
        insert into vehicle
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                userId,
            </if>
            <if test="companyId != null">
                companyId,
            </if>
            <if test="vehicleNumber != null">
                vehicleNumber,
            </if>
            <if test="vehicleType != null">
                vehicleType,
            </if>
            <if test="vin != null">
                vin,
            </if>
            <if test="model != null">
                model,
            </if>
            <if test="ownerName != null">
                ownerName,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="motorNumber != null">
                motorNumber,
            </if>
            <if test="registerDate != null">
                registerDate,
            </if>
            <if test="issueDate != null">
                issueDate,
            </if>
            <if test="purpose != null">
                purpose,
            </if>
            <if test="capacity != null">
                capacity,
            </if>
            <if test="curbWeight != null">
                curbWeight,
            </if>
            <if test="outsideDimensions != null">
                outsideDimensions,
            </if>
            <if test="bodyColor != null">
                bodyColor,
            </if>
            <if test="energyType != null">
                energyType,
            </if>
            <if test="plateColor != null">
                plateColor,
            </if>
            <if test="techLevel != null">
                techLevel,
            </if>
            <if test="operateTypeId != null">
                operateTypeId,
            </if>
            <if test="axisCount != null">
                axisCount,
            </if>
            <if test="deviceId != null">
                deviceId,
            </if>
            <if test="expirationDate != null">
                expirationDate,
            </if>
            <if test="tankExpirationDate != null">
                tankExpirationDate,
            </if>
            <if test="policyExpirationDate != null">
                policyExpirationDate,
            </if>
            <if test="licenseExpirationDate != null">
                licenseExpirationDate,
            </if>
            <if test="isOpenService != null">
                isOpenService,
            </if>
            <if test="fileIntegrity != null">
                fileIntegrity,
            </if>
            <if test="createUserId != null">
                createUserId,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updateUserId != null">
                updateUserId,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="extcol != null">
                extcol,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="protocol != null">
                protocol,
            </if>
            <if test="orgCode != null">
                orgCode,
            </if>
            <if test="hierarchyCode != null">
                hierarchyCode,
            </if>
            <if test="serviceExpDate != null">
                serviceExpDate,
            </if>
            <if test="line != null">
                line,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=BIGINT},
            </if>
            <if test="vehicleNumber != null">
                #{vehicleNumber,jdbcType=VARCHAR},
            </if>
            <if test="vehicleType != null">
                #{vehicleType,jdbcType=VARCHAR},
            </if>
            <if test="vin != null">
                #{vin,jdbcType=VARCHAR},
            </if>
            <if test="model != null">
                #{model,jdbcType=VARCHAR},
            </if>
            <if test="ownerName != null">
                #{ownerName,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="motorNumber != null">
                #{motorNumber,jdbcType=VARCHAR},
            </if>
            <if test="registerDate != null">
                #{registerDate,jdbcType=DATE},
            </if>
            <if test="issueDate != null">
                #{issueDate,jdbcType=DATE},
            </if>
            <if test="purpose != null">
                #{purpose,jdbcType=VARCHAR},
            </if>
            <if test="capacity != null">
                #{capacity,jdbcType=INTEGER},
            </if>
            <if test="curbWeight != null">
                #{curbWeight,jdbcType=INTEGER},
            </if>
            <if test="outsideDimensions != null">
                #{outsideDimensions,jdbcType=VARCHAR},
            </if>
            <if test="bodyColor != null">
                #{bodyColor,jdbcType=VARCHAR},
            </if>
            <if test="energyType != null">
                #{energyType,jdbcType=VARCHAR},
            </if>
            <if test="plateColor != null">
                #{plateColor,jdbcType=VARCHAR},
            </if>
            <if test="techLevel != null">
                #{techLevel,jdbcType=VARCHAR},
            </if>
            <if test="operateTypeId != null">
                #{operateTypeId,jdbcType=VARCHAR},
            </if>
            <if test="axisCount != null">
                #{axisCount,jdbcType=INTEGER},
            </if>
            <if test="deviceId != null">
                #{deviceId,jdbcType=BIGINT},
            </if>
            <if test="expirationDate != null">
                #{expirationDate,jdbcType=DATE},
            </if>
            <if test="tankExpirationDate != null">
                #{tankExpirationDate,jdbcType=DATE},
            </if>
            <if test="policyExpirationDate != null">
                #{policyExpirationDate,jdbcType=DATE},
            </if>
            <if test="licenseExpirationDate != null">
                #{licenseExpirationDate,jdbcType=DATE},
            </if>
            <if test="isOpenService != null">
                #{isOpenService,jdbcType=BIT},
            </if>
            <if test="fileIntegrity != null">
                #{fileIntegrity,jdbcType=DECIMAL},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="extcol != null">
                #{extcol,jdbcType=CHAR},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="protocol != null">
                #{protocol,jdbcType=VARCHAR},
            </if>
            <if test="orgCode != null">
                #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="hierarchyCode != null">
                #{hierarchyCode,jdbcType=VARCHAR},
            </if>
            <if test="serviceExpDate != null">
                #{serviceExpDate,jdbcType=DATE},
            </if>
            <if test="line != null">
                #{line,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.transnova.foundation.vehicle.mapper.VehicleExample"
            resultType="java.lang.Long">
        select count(*) from vehicle
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update vehicle
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                userId = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.companyId != null">
                companyId = #{record.companyId,jdbcType=BIGINT},
            </if>
            <if test="record.vehicleNumber != null">
                vehicleNumber = #{record.vehicleNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.vehicleType != null">
                vehicleType = #{record.vehicleType,jdbcType=VARCHAR},
            </if>
            <if test="record.vin != null">
                vin = #{record.vin,jdbcType=VARCHAR},
            </if>
            <if test="record.model != null">
                model = #{record.model,jdbcType=VARCHAR},
            </if>
            <if test="record.ownerName != null">
                ownerName = #{record.ownerName,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.motorNumber != null">
                motorNumber = #{record.motorNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.registerDate != null">
                registerDate = #{record.registerDate,jdbcType=DATE},
            </if>
            <if test="record.issueDate != null">
                issueDate = #{record.issueDate,jdbcType=DATE},
            </if>
            <if test="record.purpose != null">
                purpose = #{record.purpose,jdbcType=VARCHAR},
            </if>
            <if test="record.capacity != null">
                capacity = #{record.capacity,jdbcType=INTEGER},
            </if>
            <if test="record.curbWeight != null">
                curbWeight = #{record.curbWeight,jdbcType=INTEGER},
            </if>
            <if test="record.outsideDimensions != null">
                outsideDimensions = #{record.outsideDimensions,jdbcType=VARCHAR},
            </if>
            <if test="record.bodyColor != null">
                bodyColor = #{record.bodyColor,jdbcType=VARCHAR},
            </if>
            <if test="record.energyType != null">
                energyType = #{record.energyType,jdbcType=VARCHAR},
            </if>
            <if test="record.plateColor != null">
                plateColor = #{record.plateColor,jdbcType=VARCHAR},
            </if>
            <if test="record.techLevel != null">
                techLevel = #{record.techLevel,jdbcType=VARCHAR},
            </if>
            <if test="record.operateTypeId != null">
                operateTypeId = #{record.operateTypeId,jdbcType=VARCHAR},
            </if>
            <if test="record.axisCount != null">
                axisCount = #{record.axisCount,jdbcType=INTEGER},
            </if>
            <if test="record.deviceId != null">
                deviceId = #{record.deviceId,jdbcType=BIGINT},
            </if>
            <if test="record.expirationDate != null">
                expirationDate = #{record.expirationDate,jdbcType=DATE},
            </if>
            <if test="record.tankExpirationDate != null">
                tankExpirationDate = #{record.tankExpirationDate,jdbcType=DATE},
            </if>
            <if test="record.policyExpirationDate != null">
                policyExpirationDate = #{record.policyExpirationDate,jdbcType=DATE},
            </if>
            <if test="record.licenseExpirationDate != null">
                licenseExpirationDate = #{record.licenseExpirationDate,jdbcType=DATE},
            </if>
            <if test="record.isOpenService != null">
                isOpenService = #{record.isOpenService,jdbcType=BIT},
            </if>
            <if test="record.fileIntegrity != null">
                fileIntegrity = #{record.fileIntegrity,jdbcType=DECIMAL},
            </if>
            <if test="record.createUserId != null">
                createUserId = #{record.createUserId,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                createTime = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateUserId != null">
                updateUserId = #{record.updateUserId,jdbcType=BIGINT},
            </if>
            <if test="record.updateTime != null">
                updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.extcol != null">
                extcol = #{record.extcol,jdbcType=CHAR},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=BIT},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.protocol != null">
                protocol = #{record.protocol,jdbcType=VARCHAR},
            </if>
            <if test="record.orgCode != null">
                orgCode = #{record.orgCode,jdbcType=VARCHAR},
            </if>
            <if test="record.hierarchyCode != null">
                hierarchyCode = #{record.hierarchyCode,jdbcType=VARCHAR},
            </if>
            <if test="record.serviceExpDate != null">
                serviceExpDate = #{record.serviceExpDate,jdbcType=DATE},
            </if>
            <if test="record.line != null">
                line = #{record.line,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update vehicle
        set id = #{record.id,jdbcType=BIGINT},
        userId = #{record.userId,jdbcType=BIGINT},
        companyId = #{record.companyId,jdbcType=BIGINT},
        vehicleNumber = #{record.vehicleNumber,jdbcType=VARCHAR},
        vehicleType = #{record.vehicleType,jdbcType=VARCHAR},
        vin = #{record.vin,jdbcType=VARCHAR},
        model = #{record.model,jdbcType=VARCHAR},
        ownerName = #{record.ownerName,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        motorNumber = #{record.motorNumber,jdbcType=VARCHAR},
        registerDate = #{record.registerDate,jdbcType=DATE},
        issueDate = #{record.issueDate,jdbcType=DATE},
        purpose = #{record.purpose,jdbcType=VARCHAR},
        capacity = #{record.capacity,jdbcType=INTEGER},
        curbWeight = #{record.curbWeight,jdbcType=INTEGER},
        outsideDimensions = #{record.outsideDimensions,jdbcType=VARCHAR},
        bodyColor = #{record.bodyColor,jdbcType=VARCHAR},
        energyType = #{record.energyType,jdbcType=VARCHAR},
        plateColor = #{record.plateColor,jdbcType=VARCHAR},
        techLevel = #{record.techLevel,jdbcType=VARCHAR},
        operateTypeId = #{record.operateTypeId,jdbcType=VARCHAR},
        axisCount = #{record.axisCount,jdbcType=INTEGER},
        deviceId = #{record.deviceId,jdbcType=BIGINT},
        expirationDate = #{record.expirationDate,jdbcType=DATE},
        tankExpirationDate = #{record.tankExpirationDate,jdbcType=DATE},
        policyExpirationDate = #{record.policyExpirationDate,jdbcType=DATE},
        licenseExpirationDate = #{record.licenseExpirationDate,jdbcType=DATE},
        isOpenService = #{record.isOpenService,jdbcType=BIT},
        fileIntegrity = #{record.fileIntegrity,jdbcType=DECIMAL},
        createUserId = #{record.createUserId,jdbcType=BIGINT},
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
        updateUserId = #{record.updateUserId,jdbcType=BIGINT},
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
        extcol = #{record.extcol,jdbcType=CHAR},
        deleted = #{record.deleted,jdbcType=BIT},
        state = #{record.state,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        protocol = #{record.protocol,jdbcType=VARCHAR},
        orgCode = #{record.orgCode,jdbcType=VARCHAR},
        hierarchyCode = #{record.hierarchyCode,jdbcType=VARCHAR},
        serviceExpDate = #{record.serviceExpDate,jdbcType=DATE},
        line = #{record.line,jdbcType=VARCHAR},
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.transnova.foundation.vehicle.model.Vehicle">
        update vehicle
        <set>
            <if test="userId != null">
                userId = #{userId,jdbcType=BIGINT},
            </if>
            <if test="companyId != null">
                companyId = #{companyId,jdbcType=BIGINT},
            </if>
            <if test="vehicleNumber != null">
                vehicleNumber = #{vehicleNumber,jdbcType=VARCHAR},
            </if>
            <if test="vehicleType != null">
                vehicleType = #{vehicleType,jdbcType=VARCHAR},
            </if>
            <if test="vin != null">
                vin = #{vin,jdbcType=VARCHAR},
            </if>
            <if test="model != null">
                model = #{model,jdbcType=VARCHAR},
            </if>
            <if test="ownerName != null">
                ownerName = #{ownerName,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="motorNumber != null">
                motorNumber = #{motorNumber,jdbcType=VARCHAR},
            </if>
            <if test="registerDate != null">
                registerDate = #{registerDate,jdbcType=DATE},
            </if>
            <if test="issueDate != null">
                issueDate = #{issueDate,jdbcType=DATE},
            </if>
            <if test="purpose != null">
                purpose = #{purpose,jdbcType=VARCHAR},
            </if>
            <if test="capacity != null">
                capacity = #{capacity,jdbcType=INTEGER},
            </if>
            <if test="curbWeight != null">
                curbWeight = #{curbWeight,jdbcType=INTEGER},
            </if>
            <if test="outsideDimensions != null">
                outsideDimensions = #{outsideDimensions,jdbcType=VARCHAR},
            </if>
            <if test="bodyColor != null">
                bodyColor = #{bodyColor,jdbcType=VARCHAR},
            </if>
            <if test="energyType != null">
                energyType = #{energyType,jdbcType=VARCHAR},
            </if>
            <if test="plateColor != null">
                plateColor = #{plateColor,jdbcType=VARCHAR},
            </if>
            <if test="techLevel != null">
                techLevel = #{techLevel,jdbcType=VARCHAR},
            </if>
            <if test="operateTypeId != null">
                operateTypeId = #{operateTypeId,jdbcType=VARCHAR},
            </if>
            <if test="axisCount != null">
                axisCount = #{axisCount,jdbcType=INTEGER},
            </if>
            <if test="deviceId != null">
                deviceId = #{deviceId,jdbcType=BIGINT},
            </if>
            <if test="expirationDate != null">
                expirationDate = #{expirationDate,jdbcType=DATE},
            </if>
            <if test="tankExpirationDate != null">
                tankExpirationDate = #{tankExpirationDate,jdbcType=DATE},
            </if>
            <if test="policyExpirationDate != null">
                policyExpirationDate = #{policyExpirationDate,jdbcType=DATE},
            </if>
            <if test="licenseExpirationDate != null">
                licenseExpirationDate = #{licenseExpirationDate,jdbcType=DATE},
            </if>
            <if test="isOpenService != null">
                isOpenService = #{isOpenService,jdbcType=BIT},
            </if>
            <if test="fileIntegrity != null">
                fileIntegrity = #{fileIntegrity,jdbcType=DECIMAL},
            </if>
            <if test="createUserId != null">
                createUserId = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                updateUserId = #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="extcol != null">
                extcol = #{extcol,jdbcType=CHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="protocol != null">
                protocol = #{protocol,jdbcType=VARCHAR},
            </if>
            <if test="orgCode != null">
                orgCode = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="hierarchyCode != null">
                hierarchyCode = #{hierarchyCode,jdbcType=VARCHAR},
            </if>
            <if test="serviceExpDate != null">
                serviceExpDate = #{serviceExpDate,jdbcType=DATE},
            </if>
            <if test="line != null">
                line = #{line,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.transnova.foundation.vehicle.model.Vehicle">
    update vehicle
    set userId = #{userId,jdbcType=BIGINT},
      companyId = #{companyId,jdbcType=BIGINT},
      vehicleNumber = #{vehicleNumber,jdbcType=VARCHAR},
      vehicleType = #{vehicleType,jdbcType=VARCHAR},
      vin = #{vin,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      ownerName = #{ownerName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      motorNumber = #{motorNumber,jdbcType=VARCHAR},
      registerDate = #{registerDate,jdbcType=DATE},
      issueDate = #{issueDate,jdbcType=DATE},
      purpose = #{purpose,jdbcType=VARCHAR},
      capacity = #{capacity,jdbcType=INTEGER},
      curbWeight = #{curbWeight,jdbcType=INTEGER},
      outsideDimensions = #{outsideDimensions,jdbcType=VARCHAR},
      bodyColor = #{bodyColor,jdbcType=VARCHAR},
      energyType = #{energyType,jdbcType=VARCHAR},
      plateColor = #{plateColor,jdbcType=VARCHAR},
      techLevel = #{techLevel,jdbcType=VARCHAR},
      operateTypeId = #{operateTypeId,jdbcType=VARCHAR},
      axisCount = #{axisCount,jdbcType=INTEGER},
      deviceId = #{deviceId,jdbcType=BIGINT},
      expirationDate = #{expirationDate,jdbcType=DATE},
      tankExpirationDate = #{tankExpirationDate,jdbcType=DATE},
      policyExpirationDate = #{policyExpirationDate,jdbcType=DATE},
      licenseExpirationDate = #{licenseExpirationDate,jdbcType=DATE},
      isOpenService = #{isOpenService,jdbcType=BIT},
      fileIntegrity = #{fileIntegrity,jdbcType=DECIMAL},
      createUserId = #{createUserId,jdbcType=BIGINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateUserId = #{updateUserId,jdbcType=BIGINT},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      extcol = #{extcol,jdbcType=CHAR},
      deleted = #{deleted,jdbcType=BIT},
      state = #{state,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      protocol = #{protocol,jdbcType=VARCHAR},
      orgCode = #{orgCode,jdbcType=VARCHAR},
      hierarchyCode = #{hierarchyCode,jdbcType=VARCHAR},
      serviceExpDate = #{serviceExpDate,jdbcType=DATE},
      line = #{line,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <update id="updateDeleted" parameterType="java.util.List">
        update vehicle set deleted= ${state} where id in
        <foreach collection="id" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <update id="updateService" parameterType="java.util.List">
        update vehicle set isOpenService = true where id in
        <foreach collection="id" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateServiceClose" parameterType="java.util.List">
        update vehicle set isOpenService = false where id in
        <foreach collection="id" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateIsOpenServiceByExample" parameterType="map">
        update vehicle
        <set>
            <if test="isOpenService != null">
                isOpenService = #{isOpenService,jdbcType=BIT},
            </if>
        </set>

        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <select id="selectIdByExample" parameterType="map" resultType="java.lang.Long">
        select id from vehicle
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </select>

    <select id="countVehiclesWithCamera" parameterType="map" resultType="int">
        select
        count(1)
        from
        vehicle vehicle
        where
        companyId = #{companyId,jdbcType=BIGINT}
        <if test="governmentFiltering">
            and exists (select id from company_manage_relevance _x_ where vehicle.companyId = _x_.companyId and
            _x_.govCode like #{filteringGovernmentCode})
        </if>

        <!-- 平台运营商用户 -->
        <if test="proxyFiltering">
            and id in (select vehicleId from vehicle_manage_relevance _x_ where _x_.orgCode =
            #{filteringUserOrganizationCode})
        </if>
        <if test="companyFiltering">
            and id in (select vehicleId from vehicle_manage_relevance _x_ where _x_.orgCode =
            #{filteringUserOrganizationCode})
        </if>

    </select>

    <select id="countByUserAndOperate" parameterType="map" resultType="int">

        select count(*) as cc from vehicle a inner join company b on a.companyId=b.id
        <if test="sysUserDataPolicy != null">
            JOIN
            (
            SELECT
            id AS _id_x_
            FROM
            vehicle v
            JOIN ( SELECT hierarchyCode AS hierarchyCode FROM sys_user_data_policy WHERE userId=#{userId} AND dataType = 0 ) p
            ON v.hierarchyCode LIKE CONCAT( p.hierarchyCode, '%' )
            where v.orgCode= #{orgCode}
            UNION ALL
            ( SELECT refId AS _id_x_ FROM sys_user_data_policy WHERE userId=#{userId} AND dataType = 2 )
            ) AS _x_b_ ON _x_b_._id_x_ = a.ID
        </if>

        where
        a.deleted = 0 and b.deleted=0
        and companyId in (select refid from sys_hierarchy
        where orgCode = #{orgCode}
        <if test="code != null and code != ''">
            and code like '${code}%'
        </if>
        and type='company'
        )
        <if test="companyId != null">
            and companyId = #{companyId}
        </if>

    </select>

    <select id="findVehiclesWithCamera" parameterType="map" resultMap="BaseResultMap">
    select
    vehicle.id,
    vehicle.operateTypeId,
    vehicle.vin
    from
    vehicle vehicle ,vehicle_device device
    where vehicle.deviceId=device.id
    and device.hasCamera = 1
    and vehicle.companyId = #{companyId,jdbcType=BIGINT}
  </select>

  <!--车辆运行状态统计报表查询 -->
  <select id="selectVehicleSituation" parameterType="map" resultMap="VehicleSituationMap">
    select
      ve.id ,
      ve.plateColor as color,
      ve.vehicleNumber,
      ve.model,
      com.name as companyName,
      code.name as vehicleOperate,
      vri.lastReportTime as lastReportTime,
      vri.lastReportLongitude as lastReportLongitude,
      vri.lastReportLatitude as lastReportLatitude,
      vri.lastReportSpeed as lastReportSpeed
    from
      vehicle ve left join  vehicle_realtime_info vri on vri.vehicleId = ve.id,
      company  com,
      code code

    where
      ve.orgCode = #{orgCode}
      and hierarchyCode like #{filteringUserOrganizationCode}
      and ve.companyId=com.id
      and ve.deleted = 0
      and code.code = ve.operateTypeId
      and code.groupId = 49
    <if test="companyIds != null">
      and ve.companyId in
      <foreach collection="companyIds" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>

    <if test="vehicleIds != null">
      and ve.id in
      <foreach collection="vehicleIds" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
      order by vri.lastReportTime desc
      <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>


  <!--车辆运行状态统计报表查询 -->
  <select id="countVehicleSituation" parameterType="map" resultType="long">
    select  count(*)
    from vehicle ve,company  com,code code
    where
      ve.orgCode=#{orgCode} and ve.hierarchyCode like #{filteringUserOrganizationCode}
      and ve.companyId=com.id and ve.deleted = 0 and code.code = ve.operateTypeId and code.groupId = 49
    <if test="companyIds != null">
      and ve.companyId in
      <foreach collection="companyIds" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>

    <if test="vehicleIds != null">
      and ve.id in
      <foreach collection="vehicleIds" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>

  </select>

  <select id="selectVehicleCheckPage" parameterType="map" resultMap="VehicleSituationMap">
    select
        ve.id as id,
        com.name as companyName,
        ve.vehicleNumber ,
        ve.plateColor as color
    from vehicle ve,company  com
      <if test="sysUserDataPolicy != null">
      ,(
      SELECT
      id AS _id_x_
      FROM
      vehicle v
      JOIN
      ( SELECT hierarchyCode AS hierarchyCode
      FROM sys_user_data_policy WHERE userId = #{userId} AND dataType = 0 ) p
      ON v.hierarchyCode LIKE CONCAT( p.hierarchyCode, '%' ) UNION ALL
      ( SELECT refId AS _id_x_ FROM sys_user_data_policy WHERE userId = #{userId} AND dataType = 2 )
      ) AS _x_b_
      </if>
      where ve.orgCode =#{orgCode}
      <if test="sysUserDataPolicy != null">
          and ve.id = _x_b_._id_x_
      </if>
      <if test="filteringUserOrganizationCode != null and filteringUserOrganizationCode != ''">
          and ve.hierarchyCode like #{filteringUserOrganizationCode}
      </if>

     and ve.companyId=com.id and ve.deleted = 0

    <if test="companyName != null and companyName != ''">
      and ve.companyId =(select id from company where name = #{companyName})
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>

  <select id="countVehicleCheckPage" parameterType="map" resultType="long">
    select
        count(1)
    from vehicle ve,company  com
    <if test="sysUserDataPolicy != null">
      ,(
      SELECT
      id AS _id_x_
      FROM
      vehicle v
      JOIN
      ( SELECT hierarchyCode AS hierarchyCode
      FROM sys_user_data_policy WHERE userId = #{userId} AND dataType = 0 ) p
      ON v.hierarchyCode LIKE CONCAT( p.hierarchyCode, '%' ) UNION ALL
      ( SELECT refId AS _id_x_ FROM sys_user_data_policy WHERE userId = #{userId} AND dataType = 2 )
      ) AS _x_b_
    </if>
    where
        ve.orgCode =#{orgCode}
      <if test="sysUserDataPolicy != null">
          and ve.id = _x_b_._id_x_
      </if>
        <if test="filteringUserOrganizationCode != null and filteringUserOrganizationCode != ''">
          and ve.hierarchyCode like #{filteringUserOrganizationCode}
        </if>
        and ve.companyId=com.id and ve.deleted = 0
        <if test="companyName != null and companyName != ''">
          and ve.companyId =(select id from company where name = #{companyName})
        </if>
  </select>

    <select id="getVehicleByVin" parameterType="map" resultMap="BaseResultMap">
    select id,companyId,vehicleNumber,vin from vehicle
    where vehicleNumber = #{vehicleNumber} and right(vin,6) = #{vin}
    and deleted = 0
  </select>
    <select id="findVehiclesForViolationByCompany" resultType="com.transnova.foundation.vehicle.model.Vehicle" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from vehicle
        where companyId = #{companyId,jdbcType=BIGINT}
            and deleted = 0
            and isOpenService=1
            and LENGTH(vin)>10 AND LENGTH(motorNumber)>5
            ORDER BY id
    </select>
    <select id="findVehiclesForViolationBySharding"
            resultType="com.transnova.foundation.vehicle.model.Vehicle"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from vehicle
        where id % #{total,jdbcType=INTEGER} = #{index,jdbcType=INTEGER}
        and deleted = 0
        and isOpenService=1
        and LENGTH(vin)>10 AND LENGTH(motorNumber)>5
    </select>

    <select id="getVehicleCountByHierarchyCode" parameterType="map" resultType="com.transnova.foundation.vehicle.model.VehicleCountVo">
        select hierarchyCode,count(1) vehicleCount
        from vehicle v
        <if test="sysUserDataPolicy != null">
            JOIN
            (
            SELECT
            id AS _id_x_
            FROM
            vehicle v
            JOIN ( SELECT hierarchyCode AS hierarchyCode FROM sys_user_data_policy WHERE userId=#{userId} AND dataType = 0 ) p
            ON v.hierarchyCode LIKE CONCAT( p.hierarchyCode, '%' )
            where v.orgCode= #{orgCode}
            UNION ALL
            ( SELECT refId AS _id_x_ FROM sys_user_data_policy WHERE userId=#{userId} AND dataType = 2 )
            ) AS _x_b_ ON _x_b_._id_x_ = v.ID
        </if>
        where v.deleted=0

        <if test="orgCode != null and orgCode != ''">
            and v.orgCode = #{orgCode}
        </if>
        <if test="hierarchyCode != null and hierarchyCode != ''">
            and v.hierarchyCode like '${hierarchyCode}%'
        </if>
        GROUP BY orgCode,hierarchyCode
    </select>

    <select id="findByCondition" parameterType="com.transnova.foundation.vehicle.vo.VehicleCondition" resultMap="BaseResultMap">
    select DISTINCT
        a.id, a.userId, a.companyId, a.vehicleNumber, a.vehicleType, a.vin, a.model, a.ownerName, a.address, a.
        motorNumber, a.registerDate, a.issueDate, a.purpose, a.capacity, a.curbWeight, a.outsideDimensions, a.
        bodyColor, a.energyType, a.plateColor, a.techLevel, a.operateTypeId, a.axisCount, a.deviceId, a.
        expirationDate, a.tankExpirationDate, a.policyExpirationDate, a.licenseExpirationDate, a.
        isOpenService, a.fileIntegrity, a.createUserId, a.createTime, a.updateUserId, a.updateTime, a.
        extcol, a.deleted, a.state, a.remark, a.protocol, a.orgCode, a.hierarchyCode, a.serviceExpDate,a.line
    from vehicle as a
    INNER JOIN vehicle_device as b on a.id = b.vehicleId
    where
        a.orgCode =#{orgCode}
        <if test="filteringUserOrganizationCode != null and filteringUserOrganizationCode != ''">
            and a.hierarchyCode like #{filteringUserOrganizationCode}
        </if>

        <if test="condition.sim != null and condition.sim != ''">
            and b.sim = #{condition.sim}
        </if>

        <if test="condition.deviceSn != null and condition.deviceSn != ''">
            and b.deviceSN = #{condition.deviceSn}
        </if>
        <if test="condition.stateStr != null and condition.stateStr != ''">
            and a.deleted = #{condition.stateStr}
        </if>

        <if test="condition.companyId != null and condition.companyId != ''">
            and a.companyId = #{condition.companyId}
        </if>

        <if test="condition.vehicleNumber != null and condition.vehicleNumber != ''">
            and a.vehicleNumber = #{condition.vehicleNumber}
        </if>

        <if test="condition.operateTypeId != null and condition.operateTypeId != ''">
            and a.operateTypeId = #{condition.operateTypeId}
        </if>

        <if test="condition.isOpenService != null and condition.isOpenService != ''">
            and a.isOpenService = #{condition.isOpenService}
        </if>

        <if test="condition.energyType != null and condition.energyType != ''">
            and a.energyType = #{condition.energyType}
        </if>
        <if test="condition.vin != null and condition.vin != ''">
            and a.vin = #{condition.vin}
        </if>

        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
        </if>
    </select>

    <select id="findByConditionCount" parameterType="com.transnova.foundation.vehicle.vo.VehicleCondition" resultType="java.lang.Long">
        select count(*) from(
        select DISTINCT a.id from vehicle as a
        INNER JOIN vehicle_device as b on a.id = b.vehicleId
        where
        a.orgCode =#{orgCode}
        <if test="filteringUserOrganizationCode != null and filteringUserOrganizationCode != ''">
            and a.hierarchyCode like #{filteringUserOrganizationCode}
        </if>

        <if test="condition.sim != null and condition.sim != ''">
            and b.sim = #{condition.sim}
        </if>

        <if test="condition.deviceSn != null and condition.deviceSn != ''">
            and b.deviceSN = #{condition.deviceSn}
        </if>
        <if test="condition.stateStr != null and condition.stateStr != ''">
            and a.deleted = #{condition.stateStr}
        </if>

        <if test="condition.companyId != null and condition.companyId != ''">
            and a.companyId = #{condition.companyId}
        </if>

        <if test="condition.vehicleNumber != null and condition.vehicleNumber != ''">
            and a.vehicleNumber = #{condition.vehicleNumber}
        </if>

        <if test="condition.operateTypeId != null and condition.operateTypeId != ''">
            and a.operateTypeId = #{condition.operateTypeId}
        </if>

        <if test="condition.isOpenService != null and condition.isOpenService != ''">
            and a.isOpenService = #{condition.isOpenService}
        </if>

        <if test="condition.energyType != null and condition.energyType != ''">
            and a.energyType = #{condition.energyType}
        </if>
        <if test="condition.vin != null and condition.vin != ''">
            and a.vin = #{condition.vin}
        </if>
        )as tmp_table
    </select>


    <select id="findByConditionExcel" parameterType="com.transnova.foundation.vehicle.vo.VehicleCondition" resultType="com.transnova.foundation.vehicle.model.VehicleVo">
        select DISTINCT
        a.id, a.userId, a.companyId, a.vehicleNumber, a.vehicleType, a.vin, a.model, a.ownerName, a.address, a.
        motorNumber, a.registerDate, a.issueDate, a.purpose, a.capacity, a.curbWeight, a.outsideDimensions, a.
        bodyColor, a.energyType, a.plateColor, a.techLevel, a.operateTypeId, a.axisCount, a.deviceId, a.
        expirationDate, a.tankExpirationDate, a.policyExpirationDate, a.licenseExpirationDate, a.
        isOpenService, a.fileIntegrity, a.createUserId, a.createTime, a.updateUserId, a.updateTime, a.
        extcol, a.deleted, a.state, a.remark, a.protocol, a.orgCode, a.hierarchyCode, a.serviceExpDate,
        c.name companyName,h.name belongGroup
        from vehicle as a
        left JOIN vehicle_device as b on a.id = b.vehicleId
        inner join company c on a.companyId=c.id
        inner join sys_hierarchy h on a.orgCode=h.orgCode and a.hierarchyCode=h.`code`
        where
        a.orgCode =#{orgCode}
        <if test="filteringUserOrganizationCode != null and filteringUserOrganizationCode != ''">
            and a.hierarchyCode like #{filteringUserOrganizationCode}
        </if>

        <if test="condition.sim != null and condition.sim != ''">
            and b.sim = #{condition.sim}
        </if>

        <if test="condition.deviceSn != null and condition.deviceSn != ''">
            and b.deviceSN = #{condition.deviceSn}
        </if>
        <if test="condition.stateStr != null and condition.stateStr != ''">
            and a.deleted = #{condition.stateStr}
        </if>

        <if test="condition.companyId != null and condition.companyId != ''">
            and a.companyId = #{condition.companyId}
        </if>

        <if test="condition.vehicleNumber != null and condition.vehicleNumber != ''">
            and a.vehicleNumber = #{condition.vehicleNumber}
        </if>

        <if test="condition.operateTypeId != null and condition.operateTypeId != ''">
            and a.operateTypeId = #{condition.operateTypeId}
        </if>

        <if test="condition.isOpenService != null and condition.isOpenService != ''">
            and a.isOpenService = #{condition.isOpenService}
        </if>

        <if test="condition.energyType != null and condition.energyType != ''">
            and a.energyType = #{condition.energyType}
        </if>
        <if test="condition.vin != null and condition.vin != ''">
            and a.vin = #{condition.vin}
        </if>
        <if test="condition.plateColor != null and condition.plateColor != ''">
            and a.plateColor = #{condition.plateColor}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
        </if>
    </select>

    <select id="findVehicleTypeCountByTypeName" parameterType="map" resultType="com.transnova.foundation.attachment.model.CertificateCountVo">
        select name typeName,count(1) certificateCount
        from (
        select * from code where groupid = (select id from code_group where name='车辆.证件类型')
        ) c LEFT JOIN foundation_attachment f on c.code=f.type
        LEFT join vehicle v on v.id=f.sourceid
        where v.deleted = 0
        <if test="orgCode != null and orgCode != ''">
            and v.orgCode = #{orgCode}
        </if>
        <if test="hieCode != null and hieCode != ''">
            and hierarchyCode like '${hieCode}%'
        </if>
        <if test="types != null">
            and type in
            <foreach collection="types" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by c.name
        order by c.name
    </select>

    <select id="getVehicleDto" parameterType="map" resultType="com.transnova.foundation.vehicle.vo.VehicleDto">
        select
            v.id,
            v.vehicleNumber,
            c.name as companyName,
            co.name as operateTypeName
        from
            vehicle v,
            company c,
            code co
        where
            v.id = #{vehicleId}
         and
            c.id = v.companyId
         and
             co.groupId = #{groupId}
         and
             co.code = v.operateTypeId
    </select>

    <select id="getForContract" parameterType="map" resultType="com.transnova.foundation.vehicle.vo.VehicleContractDto">
       select
            v.id as id,
            v.vehicleNumber as vehicleNumber,
            v.plateColor as plateColor,
            c.name as vehicleOperateType,
            v.isOpenService as isOpenService,
            co.contractNo as contractNo,
            co.startTime as contractStart,
            co.endTime as contractEnd
        from
            vehicle v
        left join code c on c.code = v.operateTypeId and c.groupId = #{groupId}
        left join (select co.*, cv.vehicleId from contract co, contract_vehicle cv where cv.contractId = co.id <if test="contractId != null"> and co.id = #{contractId} </if>) co on co.vehicleId = v.id
        where v.companyId = #{companyId}
        <if test="operateTypeCode != null and operateTypeCode != ''">
            and v.operateTypeId = #{operateTypeCode}
        </if>
    </select>
    <select id="findUserAllVehicleNodeIdsByAuth" resultType="java.lang.Long"  parameterType="map">
    SELECT
        id AS _id_x_
    FROM
        vehicle v
        JOIN ( SELECT hierarchyCode AS hierarchyCode FROM sys_user_data_policy WHERE userId = #{userId} AND dataType = 0 ) p ON v.hierarchyCode LIKE CONCAT( p.hierarchyCode, '%' )
    WHERE
        v.orgCode = #{orgCode}
        UNION ALL
    ( SELECT refId AS _id_x_ FROM sys_user_data_policy WHERE userId = #{userId} AND dataType = 2 )
  </select>

</mapper>