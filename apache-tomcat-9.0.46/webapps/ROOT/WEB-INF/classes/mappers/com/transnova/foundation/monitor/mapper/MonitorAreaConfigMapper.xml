<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transnova.foundation.monitor.mapper.MonitorAreaConfigMapper">
    <resultMap id="BaseResultMap" type="com.transnova.foundation.monitor.model.MonitorAreaConfig">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="orgCode" jdbcType="VARCHAR" property="orgCode"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="areaId" jdbcType="BIGINT" property="areaId"/>
        <result column="rule" jdbcType="VARCHAR" property="rule"/>
        <result column="rateLimit" jdbcType="DECIMAL" property="rateLimit"/>
        <result column="duration" jdbcType="INTEGER" property="duration"/>
        <result column="startTime" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="endTime" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="createUserId" jdbcType="BIGINT" property="createUserId"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updateUserId" jdbcType="BIGINT" property="updateUserId"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="state" jdbcType="BIT" property="state"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>

    <resultMap id="areaAndConfigMap" type="com.transnova.foundation.monitor.model.MonitorAreaAndConfigVO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="areaId" jdbcType="BIGINT" property="areaId"/>
        <result column="areaName" jdbcType="BIGINT" property="areaName"/>
        <result column="orgCode" jdbcType="VARCHAR" property="orgCode"/>
        <result column="state" jdbcType="BIT" property="state"/>
        <result column="rule" jdbcType="VARCHAR" property="rule"/>
        <result column="ruleName" jdbcType="VARCHAR" property="ruleName"/>
        <result column="vehicleCount" jdbcType="INTEGER" property="vehicleCount"/>
        <result column="userId" jdbcType="BIGINT" property="userId"/>
        <result column="rateLimit" jdbcType="INTEGER" property="rateLimit"/>
        <result column="duration" jdbcType="INTEGER" property="duration"/>
        <result column="startTime" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="endTime" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="duration" jdbcType="INTEGER" property="duration"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        id, orgCode, name, areaId, rule, rateLimit, duration, startTime, endTime, createUserId, createTime,
        updateUserId, updateTime, state, comment, deleted
    </sql>
    <select id="selectByExample" parameterType="com.transnova.foundation.monitor.mapper.MonitorAreaConfigExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from monitor_area_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from monitor_area_config
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        delete from monitor_area_config
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.transnova.foundation.monitor.mapper.MonitorAreaConfigExample">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        delete from monitor_area_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.transnova.foundation.monitor.model.MonitorAreaConfig">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        insert into monitor_area_config (id, orgCode, name,
        areaId, rule, rateLimit, duration,
        startTime, endTime, createUserId,
        createTime, updateUserId, updateTime,
        state, comment, deleted)
        values (#{id,jdbcType=BIGINT}, #{orgCode,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{areaId,jdbcType=BIGINT}, #{rule,jdbcType=VARCHAR}, #{rateLimit,jdbcType=DECIMAL},
        #{duration,jdbcType=INTEGER},
        #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT},
        #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP},
        #{state,jdbcType=BIT}, #{comment,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.transnova.foundation.monitor.model.MonitorAreaConfig">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        insert into monitor_area_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orgCode != null">
                orgCode,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="areaId != null">
                areaId,
            </if>
            <if test="rule != null">
                rule,
            </if>
            <if test="rateLimit != null">
                rateLimit,
            </if>
            <if test="duration != null">
                duration,
            </if>
            <if test="startTime != null">
                startTime,
            </if>
            <if test="endTime != null">
                endTime,
            </if>
            <if test="createUserId != null">
                createUserId,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updateUserId != null">
                updateUserId,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="comment != null">
                comment,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="orgCode != null">
                #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null">
                #{areaId,jdbcType=BIGINT},
            </if>
            <if test="rule != null">
                #{rule,jdbcType=VARCHAR},
            </if>
            <if test="rateLimit != null">
                #{rateLimit,jdbcType=DECIMAL},
            </if>
            <if test="duration != null">
                #{duration,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=BIT},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.transnova.foundation.monitor.mapper.MonitorAreaConfigExample"
            resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        select count(*) from monitor_area_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        update monitor_area_config
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.orgCode != null">
                orgCode = #{record.orgCode,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.areaId != null">
                areaId = #{record.areaId,jdbcType=BIGINT},
            </if>
            <if test="record.rule != null">
                rule = #{record.rule,jdbcType=VARCHAR},
            </if>
            <if test="record.rateLimit != null">
                rateLimit = #{record.rateLimit,jdbcType=DECIMAL},
            </if>
            <if test="record.duration != null">
                duration = #{record.duration,jdbcType=INTEGER},
            </if>
            <if test="record.startTime != null">
                startTime = #{record.startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null">
                endTime = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createUserId != null">
                createUserId = #{record.createUserId,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                createTime = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateUserId != null">
                updateUserId = #{record.updateUserId,jdbcType=BIGINT},
            </if>
            <if test="record.updateTime != null">
                updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=BIT},
            </if>
            <if test="record.comment != null">
                comment = #{record.comment,jdbcType=VARCHAR},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        update monitor_area_config
        set id = #{record.id,jdbcType=BIGINT},
        orgCode = #{record.orgCode,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        areaId = #{record.areaId,jdbcType=BIGINT},
        rule = #{record.rule,jdbcType=VARCHAR},
        rateLimit = #{record.rateLimit,jdbcType=DECIMAL},
        duration = #{record.duration,jdbcType=INTEGER},
        startTime = #{record.startTime,jdbcType=TIMESTAMP},
        endTime = #{record.endTime,jdbcType=TIMESTAMP},
        createUserId = #{record.createUserId,jdbcType=BIGINT},
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
        updateUserId = #{record.updateUserId,jdbcType=BIGINT},
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
        state = #{record.state,jdbcType=BIT},
        comment = #{record.comment,jdbcType=VARCHAR},
        deleted = #{record.deleted,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.transnova.foundation.monitor.model.MonitorAreaConfig">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        update monitor_area_config
        <set>
            <if test="orgCode != null">
                orgCode = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null">
                areaId = #{areaId,jdbcType=BIGINT},
            </if>
            <if test="rule != null">
                rule = #{rule,jdbcType=VARCHAR},
            </if>
            <if test="rateLimit != null">
                rateLimit = #{rateLimit,jdbcType=DECIMAL},
            </if>
            <if test="duration != null">
                duration = #{duration,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                startTime = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                endTime = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                createUserId = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                updateUserId = #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=BIT},
            </if>
            <if test="comment != null">
                comment = #{comment,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.transnova.foundation.monitor.model.MonitorAreaConfig">
        <!--
          WARNING - @mbg.generated  This element was generated on Wed May 27 14:26:52 CST 2020. by MyBatis Generator, do not modify.
        -->
        update monitor_area_config
        set orgCode = #{orgCode,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        areaId = #{areaId,jdbcType=BIGINT},
        rule = #{rule,jdbcType=VARCHAR},
        rateLimit = #{rateLimit,jdbcType=DECIMAL},
        duration = #{duration,jdbcType=INTEGER},
        startTime = #{startTime,jdbcType=TIMESTAMP},
        endTime = #{endTime,jdbcType=TIMESTAMP},
        createUserId = #{createUserId,jdbcType=BIGINT},
        createTime = #{createTime,jdbcType=TIMESTAMP},
        updateUserId = #{updateUserId,jdbcType=BIGINT},
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
        state = #{state,jdbcType=BIT},
        comment = #{comment,jdbcType=VARCHAR},
        deleted = #{deleted,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <insert id="batchInsert" parameterType="map">
        insert into monitor_area_config
        (id, name, areaId, orgCode, rule,rateLimit,duration,startTime,endTime, state,
        createUserId,createTime,updateUserId,updateTime,comment)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.areaId,jdbcType=BIGINT},
            #{item.orgCode,jdbcType=VARCHAR}, #{item.rule,jdbcType=VARCHAR},
            #{rateLimit,jdbcType=DECIMAL},#{duration,jdbcType=INTEGER},
            #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},#{item.state,jdbcType=BIT},
            #{item.createUserId,jdbcType=BIGINT},#{createTime,jdbcType=TIMESTAMP},#{updateUserId,jdbcType=BIGINT},
            #{updateTime,jdbcType=TIMESTAMP},#{comment,jdbcType=VARCHAR},)
        </foreach>
    </insert>
    <insert id="batchInsertSelective" parameterType="map">
        insert into monitor_area_config (
        <foreach collection="selective" item="column" separator=",">
            ${column.value}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            <foreach collection="selective" item="column" separator=",">
                <if test="'id' == column.value">
                    #{item.id,jdbcType=BIGINT}
                </if>
                <if test="'name' == column.value">
                    #{item.name,jdbcType=VARCHAR}
                </if>
                <if test="'areaId' == column.value">
                    #{item.areaId,jdbcType=BIGINT}
                </if>
                <if test="'orgCode' == column.value">
                    #{item.orgCode,jdbcType=VARCHAR}
                </if>
                <if test="'rule' == column.value">
                    #{item.rule,jdbcType=VARCHAR}
                </if>
                <if test="'state' == column.value">
                    #{item.state,jdbcType=BIT}
                </if>
                <if test="'createUserId' == column.value">
                    #{item.createUserId,jdbcType=BIGINT}
                </if>
            </foreach>
            )
        </foreach>
    </insert>

    <select id="findAreaConfig" parameterType="map" resultMap="areaAndConfigMap">
        select
        m.id,
        areaId,
        m.name,
        ma.name areaName,
        rateLimit,
        duration,
        rule,
        comment,
        (select count(distinct(vehicleId)) from monitor_area_vehicle_relevance where areaId = m.id) vehicleCount
        from
        monitor_area_config m inner join
        (
        select id,name from monitor_area m
        where 1=1
        <if test="companyId != null">
            and companyId = #{companyId}
        </if>
        <if test="operateType != null and operateType != ''">
            and operateType = #{operateType}
        </if>
        <if test="orgCode != null and orgCode != ''">
            and companyId in (select refId from sys_hierarchy where orgCode = #{orgCode} and type = 'company'
            <!--<if test="hierarchyCode != null and hierarchyCode != ''">-->
                <!--and code like '${hierarchyCode}%'-->
            <!--</if>-->
            )
        </if>
        <if test="name != null and name != ''">
            and name like #{name}
        </if>
        ) ma on ma.id = m.areaId
        where 1 = 1 and m.state = 1
        <if test="rule != null and rule != ''">
            and rule = #{rule}
        </if>
    </select>

</mapper>