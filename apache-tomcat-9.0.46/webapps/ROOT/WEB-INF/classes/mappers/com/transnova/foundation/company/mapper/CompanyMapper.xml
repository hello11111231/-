<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transnova.foundation.company.mapper.CompanyMapper">
  <resultMap id="BaseResultMap" type="com.transnova.foundation.company.model.Company">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="orgCode" jdbcType="VARCHAR" property="orgCode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="licenseType" jdbcType="VARCHAR" property="licenseType" />
    <result column="mainBusiness" jdbcType="VARCHAR" property="mainBusiness" />
    <result column="logo" jdbcType="VARCHAR" property="logo" />
    <result column="registerAddress" jdbcType="VARCHAR" property="registerAddress" />
    <result column="foundDate" jdbcType="DATE" property="foundDate" />
    <result column="registerCapital" jdbcType="DECIMAL" property="registerCapital" />
    <result column="manageRange" jdbcType="VARCHAR" property="manageRange" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="filingRate" jdbcType="DECIMAL" property="filingRate" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="fileIntegrity" jdbcType="DECIMAL" property="fileIntegrity" />
    <result column="startServiceDate" jdbcType="TIMESTAMP" property="startServiceDate" />
    <result column="serviceExpirationDate" jdbcType="TIMESTAMP" property="serviceExpirationDate" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="createUserId" jdbcType="BIGINT" property="createUserId" />
    <result column="updateUserId" jdbcType="BIGINT" property="updateUserId" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="extcol" jdbcType="CHAR" property="extcol" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="district" jdbcType="VARCHAR" property="district" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orgCode, name, licenseType, mainBusiness, logo, registerAddress, foundDate, registerCapital, 
    manageRange, email, filingRate, identity, fileIntegrity, startServiceDate, serviceExpirationDate, 
    createTime, createUserId, updateUserId, updateTime, deleted, extcol, province, city, district
  </sql>
  <select id="selectByExample" parameterType="com.transnova.foundation.company.mapper.CompanyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from company
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.transnova.foundation.company.mapper.CompanyExample">
    delete from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.transnova.foundation.company.model.Company">
    insert into company (id, orgCode, name, 
      licenseType, mainBusiness, logo, 
      registerAddress, foundDate, registerCapital, 
      manageRange, email, filingRate, 
      identity, fileIntegrity, startServiceDate, 
      serviceExpirationDate, createTime, 
      createUserId, updateUserId, updateTime, 
      deleted, extcol, province, city, district)
    values (#{id,jdbcType=BIGINT}, #{orgCode,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{licenseType,jdbcType=VARCHAR}, #{mainBusiness,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, 
      #{registerAddress,jdbcType=VARCHAR}, #{foundDate,jdbcType=DATE}, #{registerCapital,jdbcType=DECIMAL}, 
      #{manageRange,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{filingRate,jdbcType=DECIMAL}, 
      #{identity,jdbcType=VARCHAR}, #{fileIntegrity,jdbcType=DECIMAL}, #{startServiceDate,jdbcType=TIMESTAMP}, 
      #{serviceExpirationDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=BIGINT}, #{updateUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=BIT}, #{extcol,jdbcType=CHAR},#{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.transnova.foundation.company.model.Company">
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orgCode != null">
        orgCode,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="licenseType != null">
        licenseType,
      </if>
      <if test="mainBusiness != null">
        mainBusiness,
      </if>
      <if test="logo != null">
        logo,
      </if>
      <if test="registerAddress != null">
        registerAddress,
      </if>
      <if test="foundDate != null">
        foundDate,
      </if>
      <if test="registerCapital != null">
        registerCapital,
      </if>
      <if test="manageRange != null">
        manageRange,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="filingRate != null">
        filingRate,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="fileIntegrity != null">
        fileIntegrity,
      </if>
      <if test="startServiceDate != null">
        startServiceDate,
      </if>
      <if test="serviceExpirationDate != null">
        serviceExpirationDate,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUserId != null">
        createUserId,
      </if>
      <if test="updateUserId != null">
        updateUserId,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="extcol != null">
        extcol,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="district != null">
        district,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="licenseType != null">
        #{licenseType,jdbcType=VARCHAR},
      </if>
      <if test="mainBusiness != null">
        #{mainBusiness,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="registerAddress != null">
        #{registerAddress,jdbcType=VARCHAR},
      </if>
      <if test="foundDate != null">
        #{foundDate,jdbcType=DATE},
      </if>
      <if test="registerCapital != null">
        #{registerCapital,jdbcType=DECIMAL},
      </if>
      <if test="manageRange != null">
        #{manageRange,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="filingRate != null">
        #{filingRate,jdbcType=DECIMAL},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="fileIntegrity != null">
        #{fileIntegrity,jdbcType=DECIMAL},
      </if>
      <if test="startServiceDate != null">
        #{startServiceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceExpirationDate != null">
        #{serviceExpirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="extcol != null">
        #{extcol,jdbcType=CHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.transnova.foundation.company.mapper.CompanyExample" resultType="java.lang.Long">
    select count(*) from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update company
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orgCode != null">
        orgCode = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseType != null">
        licenseType = #{record.licenseType,jdbcType=VARCHAR},
      </if>
      <if test="record.mainBusiness != null">
        mainBusiness = #{record.mainBusiness,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null">
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.registerAddress != null">
        registerAddress = #{record.registerAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.foundDate != null">
        foundDate = #{record.foundDate,jdbcType=DATE},
      </if>
      <if test="record.registerCapital != null">
        registerCapital = #{record.registerCapital,jdbcType=DECIMAL},
      </if>
      <if test="record.manageRange != null">
        manageRange = #{record.manageRange,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.filingRate != null">
        filingRate = #{record.filingRate,jdbcType=DECIMAL},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.fileIntegrity != null">
        fileIntegrity = #{record.fileIntegrity,jdbcType=DECIMAL},
      </if>
      <if test="record.startServiceDate != null">
        startServiceDate = #{record.startServiceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serviceExpirationDate != null">
        serviceExpirationDate = #{record.serviceExpirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        createUserId = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateUserId != null">
        updateUserId = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.extcol != null">
        extcol = #{record.extcol,jdbcType=CHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.district != null">
        district = #{record.district,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update company
    set id = #{record.id,jdbcType=BIGINT},
      orgCode = #{record.orgCode,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      licenseType = #{record.licenseType,jdbcType=VARCHAR},
      mainBusiness = #{record.mainBusiness,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      registerAddress = #{record.registerAddress,jdbcType=VARCHAR},
      foundDate = #{record.foundDate,jdbcType=DATE},
      registerCapital = #{record.registerCapital,jdbcType=DECIMAL},
      manageRange = #{record.manageRange,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      filingRate = #{record.filingRate,jdbcType=DECIMAL},
      identity = #{record.identity,jdbcType=VARCHAR},
      fileIntegrity = #{record.fileIntegrity,jdbcType=DECIMAL},
      startServiceDate = #{record.startServiceDate,jdbcType=TIMESTAMP},
      serviceExpirationDate = #{record.serviceExpirationDate,jdbcType=TIMESTAMP},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      createUserId = #{record.createUserId,jdbcType=BIGINT},
      updateUserId = #{record.updateUserId,jdbcType=BIGINT},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT},
      extcol = #{record.extcol,jdbcType=CHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.transnova.foundation.company.model.Company">
    update company
    <set>
      <if test="orgCode != null">
        orgCode = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="licenseType != null">
        licenseType = #{licenseType,jdbcType=VARCHAR},
      </if>
      <if test="mainBusiness != null">
        mainBusiness = #{mainBusiness,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="registerAddress != null">
        registerAddress = #{registerAddress,jdbcType=VARCHAR},
      </if>
      <if test="foundDate != null">
        foundDate = #{foundDate,jdbcType=DATE},
      </if>
      <if test="registerCapital != null">
        registerCapital = #{registerCapital,jdbcType=DECIMAL},
      </if>
      <if test="manageRange != null">
        manageRange = #{manageRange,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="filingRate != null">
        filingRate = #{filingRate,jdbcType=DECIMAL},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="fileIntegrity != null">
        fileIntegrity = #{fileIntegrity,jdbcType=DECIMAL},
      </if>
      <if test="startServiceDate != null">
        startServiceDate = #{startServiceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceExpirationDate != null">
        serviceExpirationDate = #{serviceExpirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        createUserId = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null">
        updateUserId = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="extcol != null">
        extcol = #{extcol,jdbcType=CHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.transnova.foundation.company.model.Company">
    update company
    set orgCode = #{orgCode,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      licenseType = #{licenseType,jdbcType=VARCHAR},
      mainBusiness = #{mainBusiness,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      registerAddress = #{registerAddress,jdbcType=VARCHAR},
      foundDate = #{foundDate,jdbcType=DATE},
      registerCapital = #{registerCapital,jdbcType=DECIMAL},
      manageRange = #{manageRange,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      filingRate = #{filingRate,jdbcType=DECIMAL},
      identity = #{identity,jdbcType=VARCHAR},
      fileIntegrity = #{fileIntegrity,jdbcType=DECIMAL},
      startServiceDate = #{startServiceDate,jdbcType=TIMESTAMP},
      serviceExpirationDate = #{serviceExpirationDate,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      createUserId = #{createUserId,jdbcType=BIGINT},
      updateUserId = #{updateUserId,jdbcType=BIGINT},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      extcol = #{extcol,jdbcType=CHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findCompanyTypeCountByTypeName" parameterType="map" resultType="com.transnova.foundation.attachment.model.CertificateCountVo">
    select d.name typeName,count(1) certificateCount
    from company c inner join company_certificate_expiration cce on c.id=cce.companyId
    INNER JOIN
    (
    select * from code where groupid = (select id from code_group where name='企业.证件类型')
    ) d on d.code = cce.type
    where c.deleted = 0
    <if test="orgCode != null and orgCode != ''">
      and c.orgCode = #{orgCode}
    </if>
    <if test="types != null">
      and type in
      <foreach collection="types" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
    group by d.name
    order by d.name
  </select>

  <select id="selectIdByExample" parameterType="com.transnova.foundation.company.mapper.CompanyExample" resultType="long">
    select
      id
    from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

</mapper>